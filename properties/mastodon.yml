openapi: 3.0.0
servers:
  - description: 'Any instance server.'
    url: '{{baseUrl}}'
info:
  title: Mastodon API
  description: This is an OpenAPI for the Mastodon API.
  version: 1.0.0
  contact:
    name: Kin Lane
    email: kinlane@gmail.com
tags:
  - name: Social
    description: The acitivity via social media.
paths:
  /health:
    get:
      summary: ""
      operationId: ""
      description: Returns ok to indicate server is up
      responses:
        "200":
          description: search results matching criteria
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: bad input parameter
  /oauth/authorize/native:
    get:
      responses:
        "200":
          description: "native_oauth_authorization Controller#Action
            oauth/authorizations#show"
      tags:
        - oauth
        - todo
  /oauth/authorize:
    description: Displays an authorization form to the user. If approved, it will
      create and return an authorization code, then redirect to the desired
      redirect_uri, or show the authorization code if urn:ietf:wg:oauth:2.0:oob
      was requested. The authorization code can be used while requesting a token
      to obtain access to user-level methods.
    get:
      parameters:
        - in: query
          name: response_type
          required: true
          schema:
            type: string
            enum:
              - code
          description: Should be set equal to code.
        - in: query
          name: client_id
          required: true
          schema:
            type: string
          description: Client ID, obtained during app registration.
        - in: query
          name: redirect_uri
          required: true
          schema:
            type: string
          description: Set a URI to redirect the user to. If this parameter is set to
            urn:ietf:wg:oauth:2.0:oob then the authorization code will be shown
            instead. Must match one of the redirect URIs declared during app
            registration.
        - in: query
          name: scope
          schema:
            type: string
          description: List of requested OAuth scopes, separated by spaces (or by pluses,
            if using query parameters). Must be a subset of scopes declared
            during app registration. If not provided, defaults to read.
        - in: query
          name: force_login
          schema:
            type: boolean
          description: Added in 2.6.0. Forces the user to re-login, which is necessary for
            authorizing with multiple accounts from the same instance.
      responses:
        "200":
          description: "oauth_authorization Controller#Action
            oauth/authorizations#new"
      tags:
        - oauth
        - todo
    delete:
      responses:
        "200":
          description: "Controller#Action oauth/authorizations#destroy"
      tags:
        - oauth
        - todo
    post:
      responses:
        "200":
          description: "Controller#Action oauth/authorizations#create"
      tags:
        - oauth
        - todo
  /oauth/token:
    post:
      description: Obtain an oauth token for API requests.
      requestBody:
        content:
          application/form-data:
            schema:
              type: object
              required:
                - grant_type
                - client_id
                - client_secret
                - redirect_uri
              properties:
                grant_type:
                  type: string
                  description: Set equal to authorization_code if code is provided in order to
                    gain user-level access. Otherwise, set equal to
                    client_credentials to obtain app-level access only.
                client_id:
                  type: string
                  description: Client ID, obtained during app registration
                client_secret:
                  type: string
                  description: Client secret, obtained during app registration
                redirect_uri:
                  type: string
                  description: Set a URI to redirect the user to. If this parameter is set to
                    urn:ietf:wg:oauth:2.0:oob then the token will be shown
                    instead. Must match one of the redirect URIs declared during
                    app registration.
                scope:
                  type: string
                  description: List of requested OAuth scopes, separated by spaces. Must be a
                    subset of scopes declared during app registration. If not
                    provided, defaults to read.
                code:
                  type: string
                  description: A user authorization code, obtained via /oauth/authorize
            examples:
              app token:
                value:
                  client_id: 3N5yVaa_d8TJozehuHAHGXrgAWQstWb1W03efWoDNsM
                  client_secret: Hl6FKbQZ2BE4T2i-MqKVRvEqqzzidsy-h9K3612VFyY
                  redirect_uri: urn:ietf:wg:oauth:2.0:oob
                  grant_type: client_credentials
              user token:
                value:
                  client_id: QfxXkqC6WLbhs4HyjH3oM1nMetdLot0mSK2Bp9KoZbk
                  client_secret: 3q-V6Gc85VzQIlXKgsT21IYHgSC2KKxap4tvTkj_24w
                  redirect_uri: urn:ietf:wg:oauth:2.0:oob
                  grant_type: authorization_code
                  code: NiYRkKURwiU6zMMoRFkcTXPwSr_jLWhMDvY-bZCzxJM
                  scope: read write follow push
      responses:
        "200":
          description: "oauth_token Controller#Action oauth/tokens#create"
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  token_type:
                    type: string
                  scope:
                    type: string
                  created_at:
                    type: integer
                example:
                  access_token: {{token}}
                  token_type: Bearer
                  scope: read
                  created_at: 1635107910
      tags:
        - oauth
  /oauth/revoke:
    post:
      responses:
        "200":
          description: "oauth_revoke Controller#Action oauth/tokens#revoke"
      tags:
        - oauth
        - todo
  /oauth/introspect:
    post:
      responses:
        "200":
          description: "oauth_introspect Controller#Action oauth/tokens#introspect"
      tags:
        - oauth
        - todo
  /oauth/applications:
    get:
      responses:
        "200":
          description: "oauth_applications Controller#Action
            doorkeeper/applications#index"
      tags:
        - oauth
        - todo
    post:
      responses:
        "200":
          description: "Controller#Action doorkeeper/applications#create"
      tags:
        - oauth
        - todo
  /oauth/applications/new:
    get:
      responses:
        "200":
          description: "new_oauth_application Controller#Action
            doorkeeper/applications#new"
      tags:
        - oauth
        - todo
  "/oauth/applications/{id}/edit":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      responses:
        "200":
          description: "edit_oauth_application Controller#Action
            doorkeeper/applications#edit"
      tags:
        - oauth
        - todo
  "/oauth/applications/{id}":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      responses:
        "200":
          description: "oauth_application Controller#Action
            doorkeeper/applications#show"
      tags:
        - oauth
        - todo
    patch:
      responses:
        "200":
          description: " Controller#Action doorkeeper/applications#update"
      tags:
        - oauth
        - todo
    put:
      responses:
        "200":
          description: "Controller#Action doorkeeper/applications#update"
      tags:
        - oauth
        - todo
    delete:
      responses:
        "200":
          description: "Controller#Action doorkeeper/applications#destroy"
      tags:
        - oauth
        - todo
  /oauth/authorized_applications:
    get:
      responses:
        "200":
          description: "oauth_authorized_applications Controller#Action
            oauth/authorized_applications#index"
      tags:
        - oauth
        - todo
  "/oauth/authorized_applications/{id}":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    delete:
      responses:
        "200":
          description: "oauth_authorized_application Controller#Action
            oauth/authorized_applications#destroy"
      tags:
        - oauth
        - todo
  /.well-known/host-meta:
    get:
      tags:
        - well-known
      responses:
        "200":
          description: Prefix host_meta Controller#Action well_known/host_meta#show
            {:format=>"xml"}
          content:
            application/xrd+xml:
              example: <?xml version=\"1.0\" encoding=\"UTF-8\"?> <XRD
                xmlns=\"http://docs.oasis-open.org/ns/xri/xrd-1.0\"> <Link
                rel=\"lrdd\"
                template=\"https://hostux.social/.well-known/webfinger?resource={uri}\"/>
                </XRD>
  /.well-known/nodeinfo:
    get:
      tags:
        - well-known
      responses:
        "200":
          description: Prefix nodeinfo Controller#Action well_known/nodeinfo#index
            {:format=>"json"}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WellKnownNodeInfo"
  /.well-known/webfinger:
    get:
      parameters:
        - in: query
          name: resource
          required: true
          description: query target (URI)
          schema:
            type: string
        - in: query
          name: rel
          schema:
            type: string
            format: uri
      tags:
        - well-known
        - jrd
      responses:
        "200":
          description: Prefix webfinger Controller#Action well_known/webfinger#show
          content:
            application/jrd+json:
              schema:
                $ref: "#/components/schemas/WebFinger"
  /.well-known/change-password:
    get:
      tags:
        - well-known
      responses:
        "301":
          description: Controller#Action redirect(301, /auth/edit)
          content:
            text/html:
              example: ""
          headers:
            location:
              schema:
                type: string
                example: https://hostux.social/auth/edit
  /.well-known/keybase-proof-config:
    get:
      tags:
        - well-known
      responses:
        "200":
          description: Controller#Action well_known/keybase_proof_config#show
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KeybaseProofConfig"
  /nodeinfo/2.0:
    get:
      responses:
        "200":
          description: Prefix nodeinfo_schema Controller#Action well_known/nodeinfo#show
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NodeInfo"
  /manifest:
    get:
      responses:
        "200":
          description: Prefix manifest Controller#Action manifests#show {:format=>"json"}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Manifest"
  /intent:
    get:
      tags:
        - todo
      responses:
        "200":
          description: Prefix intent Controller#Action intents#show
  /actor/inbox:
    post:
      tags:
        - ActivityPub
        - todo
      responses:
        "200":
          description: Prefix instance_actor_inbox Controller#Action
            activitypub/inboxes#create
  /actor/outbox:
    get:
      tags:
        - ActivityPub
      responses:
        "200":
          description: Prefix instance_actor_outbox Controller#Action
            activitypub/outboxes#show
          content:
            application/activity+json:
              schema:
                type: object
                properties:
                  "@context":
                    type: string
                  id:
                    type: string
                  type:
                    type: string
                  totalItems:
                    type: integer
                  first:
                    type: string
                  last:
                    type: string
                example:
                  "@context": https://www.w3.org/ns/activitystreams
                  id: http://localhost:3000/actor/outbox
                  type: OrderedCollection
                  totalItems: 0
                  first: http://localhost:3000/actor/outbox?page=true
                  last: http://localhost:3000/actor/outbox?min_id=0&page=true
  /actor:
    get:
      tags:
        - ActivityPub
        - todo
      responses:
        "200":
          description: ""
  /invite/invite_code:
    get:
      tags:
        - todo
      responses:
        "200":
          description: ""
  /auth/setup:
    get:
      tags:
        - auth
        - todo
      responses:
        "200":
          description: ""
    patch:
      tags:
        - auth
        - todo
      responses:
        "200":
          description: ""
    put:
      tags:
        - auth
        - todo
      responses:
        "200":
          description: ""
  /auth/challenge:
    post:
      tags:
        - auth
        - todo
      responses:
        "200":
          description: ""
  /auth/sessions/security_key_options:
    get:
      tags:
        - auth
        - todo
      responses:
        "200":
          description: ""
  /auth/sign_in:
    get:
      tags:
        - auth
        - todo
      responses:
        "200":
          description: ""
    post:
      tags:
        - auth
        - todo
      responses:
        "200":
          description: ""
  /auth/sign_out:
    delete:
      tags:
        - auth
        - todo
      responses:
        "200":
          description: ""
  /auth/password/new:
    get:
      tags:
        - auth
        - todo
      responses:
        "200":
          description: ""
  /auth/password/edit:
    get:
      tags:
        - auth
        - todo
      responses:
        "200":
          description: ""
  /auth/password:
    patch:
      tags:
        - auth
        - todo
      responses:
        "200":
          description: ""
    put:
      tags:
        - auth
        - todo
      responses:
        "200":
          description: ""
    post:
      tags:
        - auth
        - todo
      responses:
        "200":
          description: ""
  /auth/cancel:
    get:
      tags:
        - auth
        - todo
      responses:
        "200":
          description: ""
  /auth/sign_up:
    get:
      tags:
        - auth
        - todo
      responses:
        "200":
          description: ""
  /auth/edit:
    get:
      tags:
        - auth
        - todo
      responses:
        "200":
          description: ""
  /auth:
    patch:
      tags:
        - auth
        - todo
      responses:
        "200":
          description: ""
    put:
      tags:
        - auth
        - todo
      responses:
        "200":
          description: ""
    delete:
      tags:
        - auth
        - todo
      responses:
        "200":
          description: ""
    post:
      tags:
        - auth
        - todo
      responses:
        "200":
          description: ""
  /auth/confirmation/new:
    get:
      tags:
        - auth
        - todo
      responses:
        "200":
          description: ""
  /auth/confirmation:
    get:
      tags:
        - auth
        - todo
      responses:
        "200":
          description: ""
    post:
      tags:
        - auth
        - todo
      responses:
        "200":
          description: ""
  /authorize_follow:
    get:
      tags:
        - todo
      responses:
        "200":
          description: ""
  "/users/{account_username}/remote_follow":
    parameters:
      - in: path
        name: account_username
        description: username of an account
        required: true
        schema:
          type: string
    get:
      tags:
        - users
        - todo
      responses:
        "200":
          description: ""
    post:
      tags:
        - users
        - todo
      responses:
        "200":
          description: ""
  "/users/{account_username}/statuses/{id}/activity":
    parameters:
      - in: path
        name: account_username
        description: username of an account
        required: true
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      tags:
        - users
        - todo
      responses:
        "200":
          description: ""
  "/users/{account_username}/statuses/{id}/embed":
    parameters:
      - in: path
        name: account_username
        description: username of an account
        required: true
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      tags:
        - users
        - todo
      responses:
        "200":
          description: ""
  "/users/{account_username}/statuses/{status_id}/replies":
    parameters:
      - in: path
        name: account_username
        description: username of an account
        required: true
        schema:
          type: string
      - in: path
        name: status_id
        required: true
        schema:
          type: integer
    get:
      tags:
        - users
        - todo
      responses:
        "200":
          description: ""
  "/users/{account_username}/statuses/{id}":
    parameters:
      - in: path
        name: account_username
        description: username of an account
        required: true
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      tags:
        - users
        - todo
      responses:
        "200":
          description: ""
  "/users/{account_username}/followers":
    parameters:
      - in: path
        name: account_username
        description: username of an account
        required: true
        schema:
          type: string
    get:
      tags:
        - users
        - todo
      responses:
        "200":
          description: ""
  "/users/{account_username}/following":
    parameters:
      - in: path
        name: account_username
        description: username of an account
        required: true
        schema:
          type: string
    get:
      tags:
        - users
        - todo
      responses:
        "200":
          description: ""
  "/users/{account_username}/follow":
    parameters:
      - in: path
        name: account_username
        description: username of an account
        required: true
        schema:
          type: string
    post:
      tags:
        - users
        - todo
      responses:
        "200":
          description: ""
  "/users/{account_username}/unfollow":
    parameters:
      - in: path
        name: account_username
        description: username of an account
        required: true
        schema:
          type: string
    post:
      tags:
        - users
        - todo
      responses:
        "200":
          description: ""
  "/users/{account_username}/outbox":
    parameters:
      - in: path
        name: account_username
        description: username of an account
        required: true
        schema:
          type: string
    get:
      tags:
        - users
        - todo
      responses:
        "200":
          description: ""
  "/users/{account_username}/inbox":
    parameters:
      - in: path
        name: account_username
        description: username of an account
        required: true
        schema:
          type: string
    post:
      tags:
        - users
        - todo
      responses:
        "200":
          description: ""
  "/users/{account_username}/claim":
    parameters:
      - in: path
        name: account_username
        description: username of an account
        required: true
        schema:
          type: string
    post:
      tags:
        - users
        - todo
      responses:
        "200":
          description: ""
  "/users/{account_username}/collections/{id}":
    parameters:
      - in: path
        name: account_username
        description: username of an account
        required: true
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      tags:
        - users
        - todo
      responses:
        "200":
          description: OK
  "/users/{account_username}/followers_synchronization":
    parameters:
      - in: path
        name: account_username
        description: username of an account
        required: true
        schema:
          type: string
    get:
      tags:
        - users
        - todo
      responses:
        "200":
          description: OK
  "/users/{username}":
    parameters:
      - in: path
        name: username
        description: username of an account
        required: true
        schema:
          type: string
    get:
      tags:
        - users
        - todo
      responses:
        "200":
          description: ""
  /inbox:
    post:
      tags:
        - todo
      responses:
        "200":
          description: ""
  "/@{username}":
    parameters:
      - in: path
        name: username
        description: username of an account
        required: true
        schema:
          type: string
    get:
      tags:
        - todo
      responses:
        "200":
          description: ""
  "/@{username}/with_replies":
    parameters:
      - in: path
        name: username
        description: username of an account
        required: true
        schema:
          type: string
    get:
      tags:
        - todo
      responses:
        "200":
          description: ""
  "/@{username}/media":
    parameters:
      - in: path
        name: username
        description: username of an account
        required: true
        schema:
          type: string
    get:
      tags:
        - todo
      responses:
        "200":
          description: ""
  "/@{username}/tagged/{tag}":
    parameters:
      - in: path
        name: username
        description: username of an account
        required: true
        schema:
          type: string
      - in: path
        name: tag
        description: ""
        required: true
        schema:
          type: string
    get:
      tags:
        - todo
      responses:
        "200":
          description: ""
  "/@{account_username}/{id}":
    parameters:
      - in: path
        name: account_username
        description: username of an account
        required: true
        schema:
          type: string
      - in: path
        name: id
        description: ""
        required: true
        schema:
          type: integer
    get:
      tags:
        - todo
      responses:
        "200":
          description: ""
  "/@{account_username}/{id}/embed":
    parameters:
      - in: path
        name: account_username
        description: username of an account
        required: true
        schema:
          type: string
      - in: path
        name: id
        description: ""
        required: true
        schema:
          type: integer
    get:
      tags:
        - todo
      responses:
        "200":
          description: ""
  "/interact/{id}":
    parameters:
      - in: path
        name: id
        description: ""
        required: true
        schema:
          type: integer
    get:
      tags:
        - todo
      responses:
        "200":
          description: ""
    post:
      tags:
        - todo
      responses:
        "200":
          description: ""
  /explore:
    get:
      tags:
        - todo
      responses:
        "200":
          description: ""
  /settings:
    get:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "settings Controller#Action : redirect(301,
            /settings/profile)"
  "/settings/profile/pictures/{id}":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    delete:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "settings_profile_picture Controller#Action
            settings/pictures#destroy"
  /settings/profile:
    get:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "settings_profile Controller#Action settings/profiles#show"
    patch:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "Controller#Action settings/profiles#update"
    put:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "Controller#Action settings/profiles#update"
  /settings/preferences:
    get:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "settings_preferences Controller#Action redirect(301,
            /settings/preferences/appearance)"
  /settings/preferences/appearance:
    get:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "settings_preferences_appearance Controller#Action
            settings/preferences/appearance#show"
    patch:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "Controller#Action settings/preferences/appearance#update"
    put:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "Controller#Action settings/preferences/appearance#update"
  /settings/preferences/notifications:
    get:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "settings_preferences_notifications Controller#Action
            settings/preferences/notifications#show"
    patch:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "Controller#Action
            settings/preferences/notifications#update"
    put:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "Controller#Action
            settings/preferences/notifications#update"
  /settings/preferences/other:
    get:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "settings_preferences_other Controller#Action
            settings/preferences/other#show"
    patch:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "Controller#Action settings/preferences/other#update"
    put:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "Controller#Action settings/preferences/other#update"
  /settings/import:
    get:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "settings_import Controller#Action settings/imports#show"
    post:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "Controller#Action settings/imports#create"
  /settings/export:
    get:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "settings_export Controller#Action settings/exports#show"
    post:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "Controller#Action settings/exports#create"
  /settings/exports/follows:
    get:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "settings_exports_follows Controller#Action
            settings/exports/following_accounts#index {:format=>:csv}"
  /settings/exports/blocks:
    get:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "settings_exports_blocks Controller#Action
            settings/exports/blocked_accounts#index {:format=>:csv}"
  /settings/exports/mutes:
    get:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "settings_exports_mutes Controller#Action
            settings/exports/muted_accounts#index {:format=>:csv}"
  /settings/exports/lists:
    get:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "settings_exports_lists Controller#Action
            settings/exports/lists#index {:format=>:csv}"
  /settings/exports/domain_blocks:
    get:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "settings_exports_domain_blocks Controller#Action
            settings/exports/blocked_domains#index {:format=>:csv}"
  /settings/exports/bookmarks:
    get:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "settings_exports_bookmarks Controller#Action
            settings/exports/bookmarks#index {:format=>:csv}"
  /settings/two_factor_authentication_methods/disable:
    post:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "disable_settings_two_factor_authentication_methods
            Controller#Action
            settings/two_factor_authentication_methods#disable"
  /settings/two_factor_authentication_methods:
    get:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "settings_two_factor_authentication_methods
            Controller#Action settings/two_factor_authentication_methods#index"
  /settings/otp_authentication:
    get:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "settings_otp_authentication Controller#Action
            settings/two_factor_authentication/otp_authentication#show"
    post:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "Controller#Action
            settings/two_factor_authentication/otp_authentication#create"
  /settings/security_keys/options:
    get:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "options_settings_webauthn_credentials Controller#Action
            settings/two_factor_authentication/webauthn_credentials#options"
  /settings/security_keys:
    get:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "settings_webauthn_credentials Controller#Action
            settings/two_factor_authentication/webauthn_credentials#index"
    post:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "Controller#Action
            settings/two_factor_authentication/webauthn_credentials#create"
  /settings/security_keys/new:
    get:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "new_settings_webauthn_credential Controller#Action
            settings/two_factor_authentication/webauthn_credentials#new"
  "/settings/security_keys/{id}":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    delete:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "settings_webauthn_credential Controller#Action
            settings/two_factor_authentication/webauthn_credentials#destroy"
  /settings/two_factor_authentication/recovery_codes:
    post:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "settings_two_factor_authentication_recovery_codes
            Controller#Action
            settings/two_factor_authentication/recovery_codes#create"
  /settings/two_factor_authentication/confirmation/new:
    get:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "new_settings_two_factor_authentication_confirmation
            Controller#Action
            settings/two_factor_authentication/confirmations#new"
  /settings/two_factor_authentication/confirmation:
    post:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "settings_two_factor_authentication_confirmation
            Controller#Action
            settings/two_factor_authentication/confirmations#create"
  /settings/identity_proofs:
    get:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "settings_identity_proofs Controller#Action
            settings/identity_proofs#index"
    post:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "Controller#Action settings/identity_proofs#create"
  /settings/identity_proofs/new:
    get:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "new_settings_identity_proof Controller#Action
            settings/identity_proofs#new"
  "/settings/identity_proofs/{id}":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    delete:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "settings_identity_proof Controller#Action
            settings/identity_proofs#destroy"
  "/settings/applications/{id}/regenerate":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    post:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "regenerate_settings_application Controller#Action
            settings/applications#regenerate"
  /settings/applications:
    get:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "settings_applications Controller#Action
            settings/applications#index"
    post:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "Controller#Action settings/applications#create"
  /settings/applications/new:
    get:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "new_settings_application Controller#Action
            settings/applications#new"
  "/settings/applications/{id}":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "settings_application Controller#Action
            settings/applications#show"
    patch:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "Controller#Action settings/applications#update"
    put:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "Controller#Action settings/applications#update"
    delete:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "Controller#Action settings/applications#destroy"
  /settings/delete:
    get:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "settings_delete Controller#Action settings/deletes#show"
    delete:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "Controller#Action settings/deletes#destroy"
  /settings/migration:
    get:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "settings_migration Controller#Action
            settings/migrations#show"
    post:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "Controller#Action settings/migrations#create"
  /settings/migration/redirect/new:
    get:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "new_settings_migration_redirect Controller#Action
            settings/migration/redirects#new"
  /settings/migration/redirect:
    delete:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "settings_migration_redirect Controller#Action
            settings/migration/redirects#destroy"
    post:
      tags:
        - settings
      responses:
        "200":
          description: "Controller#Action settings/migration/redirects#create"
  /settings/aliases:
    get:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "settings_aliases Controller#Action settings/aliases#index"
    post:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "Controller#Action settings/aliases#create"
  "/settings/aliases/{id}":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    delete:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "settings_alias Controller#Action settings/aliases#destroy"
  "/settings/sessions/{id}":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    delete:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "settings_session Controller#Action
            settings/sessions#destroy"
  /settings/featured_tags:
    get:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "settings_featured_tags Controller#Action
            settings/featured_tags#index"
    post:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "Controller#Action settings/featured_tags#create"
  "/settings/featured_tags/{id}":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    delete:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "settings_featured_tag Controller#Action
            settings/featured_tags#destroy"
  /settings/login_activities:
    get:
      tags:
        - settings
        - todo
      responses:
        "200":
          description: "settings_login_activities Controller#Action
            settings/login_activities#index"
  "/media/{medium_id}/player":
    parameters:
      - in: path
        name: medium_id
        required: true
        schema:
          type: string
    get:
      tags:
        - todo
      responses:
        "200":
          description: "medium_player Controller#Action media#player"
  "/media/{id}":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      tags:
        - todo
      responses:
        "200":
          description: "medium Controller#Action media#show"
  "/tags/{id}":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      tags:
        - todo
      responses:
        "200":
          description: "tag Controller#Action tags#show"
  "/emojis/{id}":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      tags:
        - todo
      responses:
        "200":
          description: "emoji Controller#Action emojis#show"
  /invites:
    get:
      tags:
        - todo
      responses:
        "200":
          description: "invites Controller#Action invites#index"
    post:
      tags:
        - todo
      responses:
        "200":
          description: "Controller#Action invites#create"
  "/invites/{id}":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    delete:
      tags:
        - todo
      responses:
        "200":
          description: "invite Controller#Action invites#destroy"
  /filters:
    get:
      tags:
        - todo
      responses:
        "200":
          description: "filters Controller#Action filters#index"
    post:
      tags:
        - todo
      responses:
        "200":
          description: "Controller#Action filters#create"
  /filters/new:
    get:
      tags:
        - todo
      responses:
        "200":
          description: "new_filter Controller#Action filters#new"
  "/filters/{id}/edit":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      tags:
        - todo
      responses:
        "200":
          description: "edit_filter Controller#Action filters#edit"
  "/filters/{id}":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    patch:
      tags:
        - todo
      responses:
        "200":
          description: "filter Controller#Action filters#update"
    put:
      tags:
        - todo
      responses:
        "200":
          description: "Controller#Action filters#update"
    delete:
      tags:
        - todo
      responses:
        "200":
          description: "Controller#Action filters#destroy"
  /relationships:
    get:
      tags:
        - todo
      responses:
        "200":
          description: "relationships Controller#Action relationships#show"
    patch:
      tags:
        - todo
      responses:
        "200":
          description: "Controller#Action relationships#update"
    put:
      tags:
        - todo
      responses:
        "200":
          description: "Controller#Action relationships#update"
  /statuses_cleanup:
    get:
      tags:
        - todo
      responses:
        "200":
          description: "statuses_cleanup Controller#Action statuses_cleanup#show"
    patch:
      tags:
        - todo
      responses:
        "200":
          description: "Controller#Action statuses_cleanup#update"
    put:
      tags:
        - todo
      responses:
        "200":
          description: "Controller#Action statuses_cleanup#update"
  /public:
    get:
      tags:
        - todo
      responses:
        "200":
          description: "public_timeline Controller#Action public_timelines#show"
  "/media_proxy/{id}":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      tags:
        - todo
      responses:
        "200":
          description: "media_proxy Controller#Action media_proxy#show"
  /authorize_interaction:
    get:
      tags:
        - todo
      responses:
        "200":
          description: "authorize_interaction Controller#Action
            authorize_interactions#show"
    post:
      tags:
        - todo
      responses:
        "200":
          description: "Controller#Action authorize_interactions#create"
  /share:
    get:
      tags:
        - todo
      responses:
        "200":
          description: "share Controller#Action shares#show"
    post:
      tags:
        - todo
      responses:
        "200":
          description: "Controller#Action shares#create"
  /admin/dashboard:
    get:
      tags:
        - admin
        - todo
      responses:
        "200":
          description: "admin_dashboard Controller#Action admin/dashboard#index"
  /admin/domain_allows:
    post:
      tags:
        - admin
        - todo
      responses:
        "200":
          description: "admin_domain_allows Controller#Action
            admin/domain_allows#create"
  /admin/domain_allows/new:
    get:
      tags:
        - admin
        - todo
      responses:
        "200":
          description: "new_admin_domain_allow Controller#Action
            admin/domain_allows#new"
  "/admin/domain_allows/{id}":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      tags:
        - admin
        - todo
      responses:
        "200":
          description: "admin_domain_allow Controller#Action
            admin/domain_allows#show"
    delete:
      tags:
        - admin
        - todo
      responses:
        "200":
          description: "Controller#Action admin/domain_allows#destroy"
  /admin/domain_blocks:
    post:
      tags:
        - admin
        - todo
      responses:
        "200":
          description: "admin_domain_blocks Controller#Action
            admin/domain_blocks#create"
  /admin/domain_blocks/new:
    get:
      tags:
        - admin
        - todo
      responses:
        "200":
          description: "new_admin_domain_block Controller#Action
            admin/domain_blocks#new"
  "/admin/domain_blocks/{id}/edit":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      tags:
        - admin
        - todo
      responses:
        "200":
          description: "edit_admin_domain_block Controller#Action
            admin/domain_blocks#edit"
  "/admin/domain_blocks/{id}":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      tags:
        - admin
        - todo
      responses:
        "200":
          description: "admin_domain_block Controller#Action
            admin/domain_blocks#show"
    patch:
      tags:
        - admin
        - todo
      responses:
        "200":
          description: "Controller#Action admin/domain_blocks#update"
    put:
      tags:
        - admin
        - todo
      responses:
        "200":
          description: "Controller#Action admin/domain_blocks#update"
    delete:
      tags:
        - admin
        - todo
      responses:
        "200":
          description: "Controller#Action admin/domain_blocks#destroy"
  /admin/email_domain_blocks:
    get:
      tags:
        - admin
        - todo
      responses:
        "200":
          description: "admin_email_domain_blocks Controller#Action
            admin/email_domain_blocks#index"
    post:
      tags:
        - admin
        - todo
      responses:
        "200":
          description: "Controller#Action admin/email_domain_blocks#create"
  /admin/email_domain_blocks/new:
    get:
      tags:
        - admin
        - todo
      responses:
        "200":
          description: "new_admin_email_domain_block Controller#Action
            admin/email_domain_blocks#new"
  "/admin/email_domain_blocks/{id}":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    delete:
      tags:
        - admin
        - todo
      responses:
        "200":
          description: "admin_email_domain_block Controller#Action
            admin/email_domain_blocks#destroy"
  /admin/action_logs:
    get:
      tags:
        - admin
        - todo
      responses:
        "200":
          description: "admin_action_logs Controller#Action admin/action_logs#index"
  /admin/warning_presets:
    get:
      tags:
        - admin
        - todo
      responses:
        "200":
          description: "admin_warning_presets Controller#Action
            admin/warning_presets#index"
    post:
      tags:
        - admin
        - todo
      responses:
        "200":
          description: "Controller#Action admin/warning_presets#create"
  "/admin/warning_presets/{id}/edit":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      tags:
        - admin
        - todo
      responses:
        "200":
          description: "edit_admin_warning_preset Controller#Action
            admin/warning_presets#edit"
  "/admin/warning_presets/{id}":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      tags:
        - admin
        - todo
      responses:
        "200":
          description: "admin_warning_preset Controller#Action
            admin/warning_presets#show"
    patch:
      tags:
        - admin
        - todo
      responses:
        "200":
          description: "Controller#Action admin/warning_presets#update"
    put:
      tags:
        - admin
        - todo
      responses:
        "200":
          description: "Controller#Action admin/warning_presets#update"
    delete:
      tags:
        - admin
        - todo
      responses:
        "200":
          description: "Controller#Action admin/warning_presets#destroy"
  "/admin/announcements/{id}/publish":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    post:
      tags:
        - admin
        - todo
      responses:
        "200":
          description: "publish_admin_announcement Controller#Action
            admin/announcements#publish"
  "/admin/announcements/{id}/unpublish":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    post:
      tags:
        - admin
        - todo
      responses:
        "200":
          description: "unpublish_admin_announcement Controller#Action
            admin/announcements#unpublish"
  /admin/announcements:
    get:
      responses:
        "200":
          description: "admin_announcements Controller#Action
            admin/announcements#index"
      tags:
        - admin
        - todo
    post:
      responses:
        "200":
          description: "Controller#Action admin/announcements#create"
      tags:
        - admin
        - todo
  /admin/announcements/new:
    get:
      responses:
        "200":
          description: "new_admin_announcement Controller#Action
            admin/announcements#new"
      tags:
        - admin
        - todo
  "/admin/announcements/{id}/edit":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      responses:
        "200":
          description: "edit_admin_announcement Controller#Action
            admin/announcements#edit"
      tags:
        - admin
        - todo
  "/admin/announcements/{id}":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    patch:
      responses:
        "200":
          description: "admin_announcement Controller#Action
            admin/announcements#update"
      tags:
        - admin
        - todo
    put:
      responses:
        "200":
          description: "Controller#Action admin/announcements#update"
      tags:
        - admin
        - todo
    delete:
      responses:
        "200":
          description: "Controller#Action admin/announcements#destroy"
      tags:
        - admin
        - todo
  /admin/settings/edit:
    get:
      responses:
        "200":
          description: "edit_admin_settings Controller#Action admin/settings#edit"
      tags:
        - admin
        - todo
  /admin/settings:
    patch:
      responses:
        "200":
          description: "admin_settings Controller#Action admin/settings#update"
      tags:
        - admin
        - todo
    put:
      responses:
        "200":
          description: "Controller#Action admin/settings#update"
      tags:
        - admin
        - todo
  "/admin/site_uploads/{id}":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    delete:
      responses:
        "200":
          description: "admin_site_upload Controller#Action
            admin/site_uploads#destroy"
      tags:
        - admin
        - todo
  /admin/invites/deactivate_all:
    post:
      responses:
        "200":
          description: "deactivate_all_admin_invites Controller#Action
            admin/invites#deactivate_all"
      tags:
        - admin
        - todo
  /admin/invites:
    get:
      responses:
        "200":
          description: "admin_invites Controller#Action admin/invites#index"
      tags:
        - admin
        - todo
    post:
      responses:
        "200":
          description: "Controller#Action admin/invites#create"
      tags:
        - admin
        - todo
  "/admin/invites/{id}":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    delete:
      responses:
        "200":
          description: "admin_invite Controller#Action admin/invites#destroy"
      tags:
        - admin
        - todo
  "/admin/relays/{id}/enable":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "enable_admin_relay Controller#Action admin/relays#enable"
      tags:
        - admin
        - todo
  "/admin/relays/{id}/disable":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "disable_admin_relay Controller#Action admin/relays#disable"
      tags:
        - admin
        - todo
  /admin/relays:
    get:
      responses:
        "200":
          description: "admin_relays Controller#Action admin/relays#index"
      tags:
        - admin
        - todo
    post:
      responses:
        "200":
          description: "Controller#Action admin/relays#create"
      tags:
        - admin
        - todo
  /admin/relays/new:
    get:
      responses:
        "200":
          description: "new_admin_relay Controller#Action admin/relays#new"
      tags:
        - admin
        - todo
  "/admin/relays/{id}":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    delete:
      responses:
        "200":
          description: "admin_relay Controller#Action admin/relays#destroy"
      tags:
        - admin
        - todo
  "/admin/instances/{id}/clear_delivery_errors":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "clear_delivery_errors_admin_instance Controller#Action
            admin/instances#clear_delivery_errors {:id=>/[^\\/]+/}"
      tags:
        - admin
        - todo
  "/admin/instances/{id}/restart_delivery":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "restart_delivery_admin_instance Controller#Action
            admin/instances#restart_delivery {:id=>/[^\\/]+/}"
      tags:
        - admin
        - todo
  "/admin/instances/{id}/stop_delivery":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "stop_delivery_admin_instance Controller#Action
            admin/instances#stop_delivery {:id=>/[^\\/]+/}"
      tags:
        - admin
        - todo
  /admin/instances:
    get:
      responses:
        "200":
          description: "admin_instances Controller#Action admin/instances#index"
      tags:
        - admin
        - todo
  "/admin/instances/{id}":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      responses:
        "200":
          description: "admin_instance Controller#Action admin/instances#show
            {:id=>/[^\\/]+/}"
      tags:
        - admin
        - todo
  /admin/rules:
    get:
      responses:
        "200":
          description: "admin_rules Controller#Action admin/rules#index"
      tags:
        - admin
        - todo
    post:
      responses:
        "200":
          description: "Controller#Action admin/rules#create"
      tags:
        - admin
        - todo
  /admin/rules/new:
    get:
      responses:
        "200":
          description: "new_admin_rule Controller#Action admin/rules#new"
      tags:
        - admin
        - todo
  "/admin/rules/{id}/edit":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      responses:
        "200":
          description: "edit_admin_rule Controller#Action admin/rules#edit"
      tags:
        - admin
        - todo
  "/admin/rules/{id}":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      responses:
        "200":
          description: "admin_rule Controller#Action admin/rules#show"
      tags:
        - admin
        - todo
    patch:
      responses:
        "200":
          description: "Controller#Action admin/rules#update"
      tags:
        - admin
        - todo
    put:
      responses:
        "200":
          description: "Controller#Action admin/rules#update"
      tags:
        - admin
        - todo
    delete:
      responses:
        "200":
          description: "Controller#Action admin/rules#destroy"
      tags:
        - admin
        - todo
  "/admin/reports/{id}/assign_to_self":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "assign_to_self_admin_report Controller#Action
            admin/reports#assign_to_self"
      tags:
        - admin
        - todo
  "/admin/reports/{id}/unassign":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "unassign_admin_report Controller#Action
            admin/reports#unassign"
      tags:
        - admin
        - todo
  "/admin/reports/{id}/reopen":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "reopen_admin_report Controller#Action admin/reports#reopen"
      tags:
        - admin
        - todo
  "/admin/reports/{id}/resolve":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "resolve_admin_report Controller#Action
            admin/reports#resolve"
      tags:
        - admin
        - todo
  "/admin/reports/{report_id}/reported_statuses":
    parameters:
      - in: path
        name: report_id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "admin_report_reported_statuses Controller#Action
            admin/reported_statuses#create"
      tags:
        - admin
        - todo
  /admin/reports:
    get:
      responses:
        "200":
          description: "admin_reports Controller#Action admin/reports#index"
      tags:
        - admin
        - todo
  "/admin/reports/{id}":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      responses:
        "200":
          description: "admin_report Controller#Action admin/reports#show"
      tags:
        - admin
        - todo
  /admin/report_notes:
    post:
      responses:
        "200":
          description: "admin_report_notes Controller#Action
            admin/report_notes#create"
      tags:
        - admin
        - todo
  "/admin/report_notes/{id}":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    delete:
      responses:
        "200":
          description: "admin_report_note Controller#Action
            admin/report_notes#destroy"
      tags:
        - admin
        - todo
  "/admin/accounts/{id}/enable":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "enable_admin_account Controller#Action
            admin/accounts#enable"
      tags:
        - admin
        - todo
  "/admin/accounts/{id}/unsensitive":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "unsensitive_admin_account Controller#Action
            admin/accounts#unsensitive"
      tags:
        - admin
        - todo
  "/admin/accounts/{id}/unsilence":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "unsilence_admin_account Controller#Action
            admin/accounts#unsilence"
      tags:
        - admin
        - todo
  "/admin/accounts/{id}/unsuspend":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "unsuspend_admin_account Controller#Action
            admin/accounts#unsuspend"
      tags:
        - admin
        - todo
  "/admin/accounts/{id}/redownload":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "redownload_admin_account Controller#Action
            admin/accounts#redownload"
      tags:
        - admin
        - todo
  "/admin/accounts/{id}/remove_avatar":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "remove_avatar_admin_account Controller#Action
            admin/accounts#remove_avatar"
      tags:
        - admin
        - todo
  "/admin/accounts/{id}/remove_header":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "remove_header_admin_account Controller#Action
            admin/accounts#remove_header"
      tags:
        - admin
        - todo
  "/admin/accounts/{id}/memorialize":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "memorialize_admin_account Controller#Action
            admin/accounts#memorialize"
      tags:
        - admin
        - todo
  "/admin/accounts/{id}/approve":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "approve_admin_account Controller#Action
            admin/accounts#approve"
      tags:
        - admin
        - todo
  "/admin/accounts/{id}/reject":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "reject_admin_account Controller#Action
            admin/accounts#reject"
      tags:
        - admin
        - todo
  "/admin/accounts/{account_id}/change_email":
    parameters:
      - in: path
        name: account_id
        required: true
        schema:
          type: integer
    get:
      responses:
        "200":
          description: "admin_account_change_email Controller#Action
            admin/change_emails#show"
      tags:
        - admin
        - todo
    patch:
      responses:
        "200":
          description: "Controller#Action admin/change_emails#update"
      tags:
        - admin
        - todo
    put:
      responses:
        "200":
          description: "Controller#Action admin/change_emails#update"
      tags:
        - admin
        - todo
  "/admin/accounts/{account_id}/reset":
    parameters:
      - in: path
        name: account_id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "admin_account_reset Controller#Action admin/resets#create"
      tags:
        - admin
        - todo
  "/admin/accounts/{account_id}/action/new":
    parameters:
      - in: path
        name: account_id
        required: true
        schema:
          type: integer
    get:
      responses:
        "200":
          description: "new_admin_account_action Controller#Action
            admin/account_actions#new"
      tags:
        - admin
        - todo
  "/admin/accounts/{account_id}/action":
    parameters:
      - in: path
        name: account_id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "admin_account_action Controller#Action
            admin/account_actions#create"
      tags:
        - admin
        - todo
  "/admin/accounts/{account_id}/statuses":
    parameters:
      - in: path
        name: account_id
        required: true
        schema:
          type: integer
    get:
      responses:
        "200":
          description: "admin_account_statuses Controller#Action
            admin/statuses#index"
      tags:
        - admin
        - todo
    post:
      responses:
        "200":
          description: "Controller#Action admin/statuses#create"
      tags:
        - admin
        - todo
  "/admin/accounts/{account_id}/statuses/{id}":
    parameters:
      - in: path
        name: account_id
        required: true
        schema:
          type: integer
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      responses:
        "200":
          description: "admin_account_status Controller#Action admin/statuses#show"
      tags:
        - admin
        - todo
    patch:
      responses:
        "200":
          description: "Controller#Action admin/statuses#update"
      tags:
        - admin
        - todo
    put:
      responses:
        "200":
          description: "Controller#Action admin/statuses#update"
      tags:
        - admin
        - todo
    delete:
      responses:
        "200":
          description: "Controller#Action admin/statuses#destroy"
      tags:
        - admin
        - todo
  "/admin/accounts/{account_id}/relationships":
    parameters:
      - in: path
        name: account_id
        required: true
        schema:
          type: integer
    get:
      responses:
        "200":
          description: "admin_account_relationships Controller#Action
            admin/relationships#index"
      tags:
        - admin
        - todo
  "/admin/accounts/{account_id}/confirmation/resend":
    parameters:
      - in: path
        name: account_id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "resend_admin_account_confirmation Controller#Action
            admin/confirmations#resend"
      tags:
        - admin
        - todo
  "/admin/accounts/{account_id}/confirmation":
    parameters:
      - in: path
        name: account_id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "admin_account_confirmation Controller#Action
            admin/confirmations#create"
      tags:
        - admin
        - todo
  "/admin/accounts/{account_id}/role/promote":
    parameters:
      - in: path
        name: account_id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "promote_admin_account_role Controller#Action
            admin/roles#promote"
      tags:
        - admin
        - todo
  "/admin/accounts/{account_id}/role/demote":
    parameters:
      - in: path
        name: account_id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "demote_admin_account_role Controller#Action
            admin/roles#demote"
      tags:
        - admin
        - todo
  /admin/accounts:
    get:
      responses:
        "200":
          description: "admin_accounts Controller#Action admin/accounts#index"
      tags:
        - admin
        - todo
  "/admin/accounts/{id}":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      responses:
        "200":
          description: "admin_account Controller#Action admin/accounts#show"
      tags:
        - admin
        - todo
    delete:
      responses:
        "200":
          description: "Controller#Action admin/accounts#destroy"
      tags:
        - admin
        - todo
  /admin/pending_accounts/approve_all:
    post:
      responses:
        "200":
          description: "approve_all_admin_pending_accounts Controller#Action
            admin/pending_accounts#approve_all"
      tags:
        - admin
        - todo
  /admin/pending_accounts/reject_all:
    post:
      responses:
        "200":
          description: "reject_all_admin_pending_accounts Controller#Action
            admin/pending_accounts#reject_all"
      tags:
        - admin
        - todo
  /admin/pending_accounts/batch:
    post:
      responses:
        "200":
          description: "batch_admin_pending_accounts Controller#Action
            admin/pending_accounts#batch"
      tags:
        - admin
        - todo
  /admin/pending_accounts:
    get:
      responses:
        "200":
          description: "admin_pending_accounts Controller#Action
            admin/pending_accounts#index"
      tags:
        - admin
        - todo
  "/admin/users/{user_id}/two_factor_authentication":
    parameters:
      - in: path
        name: user_id
        required: true
        schema:
          type: integer
    delete:
      responses:
        "200":
          description: "admin_user_two_factor_authentication Controller#Action
            admin/two_factor_authentications#destroy"
      tags:
        - admin
        - todo
  "/admin/users/{user_id}/sign_in_token_authentication":
    parameters:
      - in: path
        name: user_id
        required: true
        schema:
          type: integer
    delete:
      responses:
        "200":
          description: "admin_user_sign_in_token_authentication Controller#Action
            admin/sign_in_token_authentications#destroy"
      tags:
        - admin
        - todo
    post:
      responses:
        "200":
          description: "Controller#Action
            admin/sign_in_token_authentications#create"
      tags:
        - admin
        - todo
  /admin/custom_emojis/batch:
    post:
      responses:
        "200":
          description: "batch_admin_custom_emojis Controller#Action
            admin/custom_emojis#batch"
      tags:
        - admin
        - todo
  /admin/custom_emojis:
    get:
      responses:
        "200":
          description: "admin_custom_emojis Controller#Action
            admin/custom_emojis#index"
      tags:
        - admin
        - todo
    post:
      responses:
        "200":
          description: "Controller#Action admin/custom_emojis#create"
      tags:
        - admin
        - todo
  /admin/custom_emojis/new:
    get:
      responses:
        "200":
          description: "new_admin_custom_emoji Controller#Action
            admin/custom_emojis#new"
      tags:
        - admin
        - todo
  /admin/ip_blocks/batch:
    post:
      responses:
        "200":
          description: "batch_admin_ip_blocks Controller#Action
            admin/ip_blocks#batch"
      tags:
        - admin
        - todo
  /admin/ip_blocks:
    get:
      responses:
        "200":
          description: "admin_ip_blocks Controller#Action admin/ip_blocks#index"
      tags:
        - admin
        - todo
    post:
      responses:
        "200":
          description: "Controller#Action admin/ip_blocks#create"
      tags:
        - admin
        - todo
  /admin/ip_blocks/new:
    get:
      responses:
        "200":
          description: "new_admin_ip_block Controller#Action admin/ip_blocks#new"
      tags:
        - admin
        - todo
  /admin/account_moderation_notes:
    post:
      responses:
        "200":
          description: "admin_account_moderation_notes Controller#Action
            admin/account_moderation_notes#create"
      tags:
        - admin
        - todo
  "/admin/account_moderation_notes/{id}":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    delete:
      responses:
        "200":
          description: "admin_account_moderation_note Controller#Action
            admin/account_moderation_notes#destroy"
      tags:
        - admin
        - todo
  /admin/follow_recommendations:
    get:
      responses:
        "200":
          description: "admin_follow_recommendations Controller#Action
            admin/follow_recommendations#show"
      tags:
        - admin
        - todo
    patch:
      responses:
        "200":
          description: "Controller#Action admin/follow_recommendations#update"
      tags:
        - admin
        - todo
    put:
      responses:
        "200":
          description: "Controller#Action admin/follow_recommendations#update"
      tags:
        - admin
        - todo
  /admin/tags/approve_all:
    post:
      responses:
        "200":
          description: "approve_all_admin_tags Controller#Action
            admin/tags#approve_all"
      tags:
        - admin
        - todo
  /admin/tags/reject_all:
    post:
      responses:
        "200":
          description: "reject_all_admin_tags Controller#Action
            admin/tags#reject_all"
      tags:
        - admin
        - todo
  /admin/tags/batch:
    post:
      responses:
        "200":
          description: "batch_admin_tags Controller#Action admin/tags#batch"
      tags:
        - admin
        - todo
  /admin/tags:
    get:
      responses:
        "200":
          description: "admin_tags Controller#Action admin/tags#index"
      tags:
        - admin
        - todo
  "/admin/tags/{id}":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      responses:
        "200":
          description: "admin_tag Controller#Action admin/tags#show"
      tags:
        - admin
        - todo
    patch:
      responses:
        "200":
          description: "Controller#Action admin/tags#update"
      tags:
        - admin
        - todo
    put:
      responses:
        "200":
          description: "Controller#Action admin/tags#update"
      tags:
        - admin
        - todo
  /admin:
    get:
      responses:
        "200":
          description: "admin Controller#Action redirect(302, /admin/dashboard)"
      tags:
        - admin
        - todo
  /api/oembed:
    get:
      responses:
        "200":
          description: "api_oembed Controller#Action api/oembed#show"
      tags:
        - api
        - todo
  /api/proofs:
    get:
      responses:
        "200":
          description: "api_proofs Controller#Action api/proofs#index"
      tags:
        - api
        - todo
  "/api/v1/statuses/{status_id}/reblogged_by":
    parameters:
      - in: path
        name: status_id
        required: true
        schema:
          type: integer
    get:
      responses:
        "200":
          description: "api_v1_status_reblogged_by_index Controller#Action
            api/v1/statuses/reblogged_by_accounts#index"
      tags:
        - api
        - todo
  "/api/v1/statuses/{status_id}/favourited_by":
    parameters:
      - in: path
        name: status_id
        required: true
        schema:
          type: integer
    get:
      responses:
        "200":
          description: "api_v1_status_favourited_by_index Controller#Action
            api/v1/statuses/favourited_by_accounts#index"
      tags:
        - api
        - todo
  "/api/v1/statuses/{status_id}/reblog":
    parameters:
      - in: path
        name: status_id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "api_v1_status_reblog Controller#Action
            api/v1/statuses/reblogs#create"
      tags:
        - api
        - todo
  "/api/v1/statuses/{status_id}/unreblog":
    parameters:
      - in: path
        name: status_id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "api_v1_status_unreblog Controller#Action
            api/v1/statuses/reblogs#destroy"
      tags:
        - api
        - todo
  "/api/v1/statuses/{status_id}/favourite":
    parameters:
      - in: path
        name: status_id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "api_v1_status_favourite Controller#Action
            api/v1/statuses/favourites#create"
      tags:
        - api
        - todo
  "/api/v1/statuses/{status_id}/unfavourite":
    parameters:
      - in: path
        name: status_id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "api_v1_status_unfavourite Controller#Action
            api/v1/statuses/favourites#destroy"
      tags:
        - api
        - todo
  "/api/v1/statuses/{status_id}/bookmark":
    parameters:
      - in: path
        name: status_id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "api_v1_status_bookmark Controller#Action
            api/v1/statuses/bookmarks#create"
      tags:
        - todo
        - api
  "/api/v1/statuses/{status_id}/unbookmark":
    parameters:
      - in: path
        name: status_id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "api_v1_status_unbookmark Controller#Action
            api/v1/statuses/bookmarks#destroy"
      tags:
        - api
        - todo
  "/api/v1/statuses/{status_id}/mute":
    parameters:
      - in: path
        name: status_id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "api_v1_status_mute Controller#Action
            api/v1/statuses/mutes#create"
      tags:
        - api
        - todo
  "/api/v1/statuses/{status_id}/unmute":
    parameters:
      - in: path
        name: status_id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "api_v1_status_unmute Controller#Action
            api/v1/statuses/mutes#destroy"
      tags:
        - api
        - todo
  "/api/v1/statuses/{status_id}/pin":
    parameters:
      - in: path
        name: status_id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "api_v1_status_pin Controller#Action
            api/v1/statuses/pins#create"
      tags:
        - api
        - todo
  "/api/v1/statuses/{status_id}/unpin":
    parameters:
      - in: path
        name: status_id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "api_v1_status_unpin Controller#Action
            api/v1/statuses/pins#destroy"
      tags:
        - api
        - todo
  "/api/v1/statuses/{id}/context":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      responses:
        "200":
          description: "context_api_v1_status Controller#Action
            api/v1/statuses#context"
      tags:
        - api
        - todo
  /api/v1/statuses:
    post:
      responses:
        "200":
          description: "api_v1_statuses Controller#Action api/v1/statuses#create"
      tags:
        - api
        - todo
  "/api/v1/statuses/{id}":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      responses:
        "200":
          description: "api_v1_status Controller#Action api/v1/statuses#show"
      tags:
        - api
        - todo
    delete:
      responses:
        "200":
          description: "Controller#Action api/v1/statuses#destroy"
      tags:
        - api
        - todo
  /api/v1/timelines/home:
    get:
      responses:
        "200":
          description: "api_v1_timelines_home Controller#Action
            api/v1/timelines/home#show"
      tags:
        - api
        - todo
  /api/v1/timelines/public:
    get:
      responses:
        "200":
          description: "api_v1_timelines_public Controller#Action
            api/v1/timelines/public#show"
      tags:
        - api
        - todo
  "/api/v1/timelines/tag/{id}":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      responses:
        "200":
          description: "api_v1_timelines_tag Controller#Action
            api/v1/timelines/tag#show"
      tags:
        - api
        - todo
  "/api/v1/timelines/list/{id}":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      responses:
        "200":
          description: "api_v1_timelines_list Controller#Action
            api/v1/timelines/list#show"
      tags:
        - api
        - todo
  /api/v1/streaming:
    get:
      responses:
        "200":
          description: "api_v1_streaming_index Controller#Action
            api/v1/streaming#index"
      tags:
        - api
        - todo
  /api/v1/custom_emojis:
    get:
      responses:
        "200":
          description: "api_v1_custom_emojis Controller#Action
            api/v1/custom_emojis#index"
      tags:
        - api
        - todo
  /api/v1/suggestions:
    get:
      responses:
        "200":
          description: "api_v1_suggestions Controller#Action
            api/v1/suggestions#index"
      tags:
        - api
        - todo
  "/api/v1/suggestions/{id}":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    delete:
      responses:
        "200":
          description: "api_v1_suggestion Controller#Action
            api/v1/suggestions#destroy"
      tags:
        - api
        - todo
  /api/v1/scheduled_statuses:
    get:
      responses:
        "200":
          description: "api_v1_scheduled_statuses Controller#Action
            api/v1/scheduled_statuses#index"
      tags:
        - api
        - todo
  "/api/v1/scheduled_statuses/{id}":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      responses:
        "200":
          description: "api_v1_scheduled_status Controller#Action
            api/v1/scheduled_statuses#show"
      tags:
        - api
        - todo
    patch:
      responses:
        "200":
          description: "Controller#Action api/v1/scheduled_statuses#update"
      tags:
        - api
        - todo
    put:
      responses:
        "200":
          description: "Controller#Action api/v1/scheduled_statuses#update"
      tags:
        - api
        - todo
    delete:
      responses:
        "200":
          description: "Controller#Action api/v1/scheduled_statuses#destroy"
      tags:
        - api
        - todo
  /api/v1/preferences:
    get:
      responses:
        "200":
          description: "api_v1_preferences Controller#Action
            api/v1/preferences#index"
      tags:
        - api
        - todo
  "/api/v1/announcements/{announcement_id}/reactions/{id}":
    parameters:
      - in: path
        name: announcement_id
        required: true
        schema:
          type: integer
      - in: path
        name: id
        required: true
        schema:
          type: integer
    patch:
      responses:
        "200":
          description: "api_v1_announcement_reaction Controller#Action
            api/v1/announcements/reactions#update"
      tags:
        - api
        - todo
    put:
      responses:
        "200":
          description: "Controller#Action api/v1/announcements/reactions#update"
      tags:
        - api
        - todo
    delete:
      responses:
        "200":
          description: "Controller#Action api/v1/announcements/reactions#destroy"
      tags:
        - api
        - todo
  "/api/v1/announcements/{id}/dismiss":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "dismiss_api_v1_announcement Controller#Action
            api/v1/announcements#dismiss"
      tags:
        - api
        - todo
  /api/v1/announcements:
    get:
      responses:
        "200":
          description: "api_v1_announcements Controller#Action
            api/v1/announcements#index"
      tags:
        - api
        - todo
  "/api/v1/conversations/{id}/read":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "read_api_v1_conversation Controller#Action
            api/v1/conversations#read"
      tags:
        - api
        - todo
  /api/v1/conversations:
    get:
      responses:
        "200":
          description: "api_v1_conversations Controller#Action
            api/v1/conversations#index"
      tags:
        - api
        - todo
  "/api/v1/conversations/{id}":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    delete:
      responses:
        "200":
          description: "api_v1_conversation Controller#Action
            api/v1/conversations#destroy"
      tags:
        - api
        - todo
  /api/v1/media:
    post:
      responses:
        "200":
          description: "api_v1_media Controller#Action api/v1/media#create"
      tags:
        - api
        - todo
  "/api/v1/media/{id}":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      responses:
        "200":
          description: "api_v1_medium Controller#Action api/v1/media#show"
      tags:
        - api
        - todo
    patch:
      responses:
        "200":
          description: "Controller#Action api/v1/media#update"
      tags:
        - api
        - todo
    put:
      responses:
        "200":
          description: "Controller#Action api/v1/media#update"
      tags:
        - api
        - todo
  /api/v1/blocks:
    get:
      responses:
        "200":
          description: "api_v1_blocks Controller#Action api/v1/blocks#index"
      tags:
        - api
        - todo
  /api/v1/mutes:
    get:
      responses:
        "200":
          description: "api_v1_mutes Controller#Action api/v1/mutes#index"
      tags:
        - api
        - todo
  /api/v1/favourites:
    get:
      responses:
        "200":
          description: "api_v1_favourites Controller#Action api/v1/favourites#index"
      tags:
        - api
        - todo
  /api/v1/bookmarks:
    get:
      responses:
        "200":
          description: "api_v1_bookmarks Controller#Action api/v1/bookmarks#index"
      tags:
        - api
        - todo
  /api/v1/reports:
    post:
      responses:
        "200":
          description: "api_v1_reports Controller#Action api/v1/reports#create"
      tags:
        - api
        - todo
  /api/v1/trends:
    get:
      responses:
        "200":
          description: "api_v1_trends Controller#Action api/v1/trends#index"
      tags:
        - api
        - todo
  /api/v1/filters:
    get:
      responses:
        "200":
          description: "api_v1_filters Controller#Action api/v1/filters#index"
      tags:
        - api
        - todo
    post:
      responses:
        "200":
          description: "Controller#Action api/v1/filters#create"
      tags:
        - api
        - todo
  "/api/v1/filters/{id}":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      responses:
        "200":
          description: "api_v1_filter Controller#Action api/v1/filters#show"
      tags:
        - api
        - todo
    patch:
      responses:
        "200":
          description: "Controller#Action api/v1/filters#update"
      tags:
        - api
        - todo
    put:
      responses:
        "200":
          description: "Controller#Action api/v1/filters#update"
      tags:
        - api
        - todo
    delete:
      responses:
        "200":
          description: "Controller#Action api/v1/filters#destroy"
      tags:
        - api
        - todo
  /api/v1/endorsements:
    get:
      responses:
        "200":
          description: "api_v1_endorsements Controller#Action
            api/v1/endorsements#index"
      tags:
        - api
        - todo
  /api/v1/markers:
    get:
      responses:
        "200":
          description: "api_v1_markers Controller#Action api/v1/markers#index"
      tags:
        - api
        - todo
    post:
      responses:
        "200":
          description: "Controller#Action api/v1/markers#create"
      tags:
        - api
        - todo
  /api/v1/apps/verify_credentials:
    get:
      description: Confirm that the app's OAuth2 credentials work.
      security:
        - bearerAuth: []
      responses:
        "200":
          description: If the Authorization header was provided with a valid token, you
            should see your app returned as an Application entity.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  website:
                    type: string
                  vapid_key:
                    type: string
                example:
                  name: test app
                  website: null
                  vapid_key: BCk-QqERU0q-CfYZjcuB6lnyyOYfJ2AifKqfeGIm7Z-HiTU5T9eTG5GxVA0_OH5mMlI4UkkDTpaZwozy0TzdZ2M=
        "401":
          description: If the Authorization header contains an invalid token, is
            malformed, or is not present, an error will be returned indicating
            an authorization failure.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                example:
                  error: The access token is invalid
      tags:
        - api
  /api/v1/apps:
    post:
      requestBody:
        content:
          application/form-data:
            schema:
              type: object
              properties:
                client_name:
                  type: string
                redirect_uris:
                  type: string
                scopes:
                  type: string
                website:
                  type: string
            example:
              client_id: 3N5yVaa_d8TJozehuHAHGXrgAWQstWb1W03efWoDNsM
              client_secret: Hl6FKbQZ2BE4T2i-MqKVRvEqqzzidsy-h9K3612VFyY
              redirect_uri: urn:ietf:wg:oauth:2.0:oob
              grant_type: client_credentials
      responses:
        "200":
          description: "api_v1_apps Controller#Action api/v1/apps#create"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: number
                  name:
                    type: string
                  website:
                    type: string
                    format: url
                  redirect_uri:
                    type: string
                  client_id:
                    type: string
                  client_secret:
                    type: string
                  vapid_key:
                    type: string
                example:
                  id: "2"
                  name: Test Application
                  website: https://myapp.example
                  redirect_uri: urn:ietf:wg:oauth:2.0:oob
                  client_id: 3N5yVaa_d8TJozehuHAHGXrgAWQstWb1W03efWoDNsM
                  client_secret: Hl6FKbQZ2BE4T2i-MqKVRvEqqzzidsy-h9K3612VFyY
                  vapid_key: BHwSbZEeYoSSZiHjzb7I7H8MBSDxcXbJI39t5buSVID-QOpqGEK0DYXNgplgJ0rcd4Jvy-nkSPQ0dOIT67V85ms=
      tags:
        - api
  /api/v1/emails/confirmations:
    post:
      responses:
        "200":
          description: "api_v1_emails_confirmations Controller#Action
            api/v1/emails/confirmations#create"
      tags:
        - api
        - todo
  /api/v1/instance/peers:
    get:
      responses:
        "200":
          description: "api_v1_instance_peers Controller#Action
            api/v1/instances/peers#index"
      tags:
        - api
        - todo
  /api/v1/instance/activity:
    get:
      responses:
        "200":
          description: "api_v1_instance_activity Controller#Action
            api/v1/instances/activity#show"
      tags:
        - api
        - todo
  /api/v1/instance/rules:
    get:
      responses:
        "200":
          description: "api_v1_instance_rules Controller#Action
            api/v1/instances/rules#index"
      tags:
        - api
        - todo
  /api/v1/instance:
    get:
      responses:
        "200":
          description: "api_v1_instance Controller#Action api/v1/instances#show"
      tags:
        - api
  /api/v1/domain_blocks:
    get:
      responses:
        "200":
          description: "api_v1_domain_blocks Controller#Action
            api/v1/domain_blocks#show"
      tags:
        - api
        - todo
    delete:
      responses:
        "200":
          description: "Controller#Action api/v1/domain_blocks#destroy"
      tags:
        - api
        - todo
    post:
      responses:
        "200":
          description: "Controller#Action api/v1/domain_blocks#create"
      tags:
        - api
        - todo
  /api/v1/directory:
    get:
      responses:
        "200":
          description: "api_v1_directory Controller#Action api/v1/directories#show"
      tags:
        - api
        - todo
  "/api/v1/follow_requests/{id}/authorize":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "authorize_api_v1_follow_request Controller#Action
            api/v1/follow_requests#authorize"
      tags:
        - api
        - todo
  "/api/v1/follow_requests/{id}/reject":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "reject_api_v1_follow_request Controller#Action
            api/v1/follow_requests#reject"
      tags:
        - api
        - todo
  /api/v1/follow_requests:
    get:
      responses:
        "200":
          description: "api_v1_follow_requests Controller#Action
            api/v1/follow_requests#index"
      tags:
        - api
        - todo
  /api/v1/notifications/clear:
    post:
      responses:
        "200":
          description: "clear_api_v1_notifications Controller#Action
            api/v1/notifications#clear"
      tags:
        - api
        - todo
  "/api/v1/notifications/{id}/dismiss":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "dismiss_api_v1_notification Controller#Action
            api/v1/notifications#dismiss"
      tags:
        - api
        - todo
  /api/v1/notifications:
    get:
      responses:
        "200":
          description: "api_v1_notifications Controller#Action
            api/v1/notifications#index"
      tags:
        - api
        - todo
  "/api/v1/notifications/{id}":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      responses:
        "200":
          description: "api_v1_notification Controller#Action
            api/v1/notifications#show"
      tags:
        - api
        - todo
  /api/v1/accounts/verify_credentials:
    get:
      description: Test to make sure that the user token works.
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Note the extra source property, which is not visible on accounts
            other than your own. Also note that plain-text is used within source
            and HTML is used for their corresponding properties such as note and
            fields.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSerializer"
              example:
                id: "14715"
                username: trwnh
                acct: trwnh
                display_name: infinite love ⴳ
                locked: false
                bot: false
                created_at: 2016-11-24T10:02:12.085Z
                note: '<p>i have approximate knowledge of many things. perpetual student.
                  (nb/ace/they)</p><p>xmpp/email: a@trwnh.com<br /><a
                  href="https://trwnh.com" rel="nofollow noopener noreferrer"
                  target="_blank"><span class="invisible">https://</span><span
                  class="">trwnh.com</span><span
                  class="invisible"></span></a><br />help me live: <a
                  href="https://liberapay.com/at" rel="nofollow noopener
                  noreferrer" target="_blank"><span
                  class="invisible">https://</span><span
                  class="">liberapay.com/at</span><span
                  class="invisible"></span></a> or <a
                  href="https://paypal.me/trwnh" rel="nofollow noopener
                  noreferrer" target="_blank"><span
                  class="invisible">https://</span><span
                  class="">paypal.me/trwnh</span><span
                  class="invisible"></span></a></p><p>- my triggers are moths
                  and glitter<br />- i have all notifs except mentions turned
                  off, so please interact if you wanna be friends! i literally
                  will not notice otherwise<br />- dm me if i did something
                  wrong, so i can improve<br />- purest person on fedi, do not
                  lewd in my presence<br />- #1 ami cole fan
                  account</p><p>:fatyoshi:</p>'
                url: https://mastodon.social/@trwnh
                avatar: https://files.mastodon.social/accounts/avatars/000/014/715/original/34aa222f4ae2e0a9.png
                avatar_static: https://files.mastodon.social/accounts/avatars/000/014/715/original/34aa222f4ae2e0a9.png
                header: https://files.mastodon.social/accounts/headers/000/014/715/original/5c6fc24edb3bb873.jpg
                header_static: https://files.mastodon.social/accounts/headers/000/014/715/original/5c6fc24edb3bb873.jpg
                followers_count: 821
                following_count: 178
                statuses_count: 33120
                last_status_at: 2019-11-24T15:49:42.251Z
                source:
                  privacy: public
                  sensitive: false
                  language: ""
                  note: "i have approximate knowledge of many things. perpetual student.
                    (nb/ace/they)\r

                    \r

                    xmpp/email: a@trwnh.com\r

                    https://trwnh.com\r

                    help me live: https://liberapay.com/at
                    or https://paypal.me/trwnh\r

                    \r

                    - my triggers are moths and glitter\r

                    - i have all notifs except mentions
                    turned off, so please interact if you wanna be friends! i
                    literally will not notice otherwise\r

                    - dm me if i did something wrong, so i
                    can improve\r

                    - purest person on fedi, do not lewd in
                    my presence\r

                    - #1 ami cole fan account\r

                    \r

                    :fatyoshi:"
                  fields:
                    - name: Website
                      value: https://trwnh.com
                      verified_at: 2019-08-29T04:14:55.571+00:00
                    - name: Sponsor
                      value: https://liberapay.com/at
                      verified_at: 2019-11-15T10:06:15.557+00:00
                    - name: "Fan of:"
                      value: Punk-rock and post-hardcore (Circa Survive, letlive., La Dispute, THE
                        FEVER 333)Manga (Yu-Gi-Oh!, One Piece, JoJo's Bizarre
                        Adventure, Death Note, Shaman King)Platformers and RPGs
                        (Banjo-Kazooie, Boktai, Final Fantasy Crystal
                        Chronicles)
                      verified_at: null
                    - name: "Main topics:"
                      value: systemic analysis, design patterns, anticapitalism, info/tech freedom,
                        theory and philosophy, and otherwise being a genuine and
                        decent wholesome poster. i'm just here to hang out and
                        talk to cool people!
                      verified_at: null
                  follow_requests_count: 0
                emojis:
                  - shortcode: fatyoshi
                    url: https://files.mastodon.social/custom_emojis/images/000/023/920/original/e57ecb623faa0dc9.png
                    static_url: https://files.mastodon.social/custom_emojis/images/000/023/920/static/e57ecb623faa0dc9.png
                    visible_in_picker: true
                fields:
                  - name: Website
                    value: <a href="https://trwnh.com" rel="me nofollow noopener noreferrer"
                      target="_blank"><span
                      class="invisible">https://</span><span
                      class="">trwnh.com</span><span
                      class="invisible"></span></a>
                    verified_at: 2019-08-29T04:14:55.571+00:00
                  - name: Sponsor
                    value: <a href="https://liberapay.com/at" rel="me nofollow noopener noreferrer"
                      target="_blank"><span
                      class="invisible">https://</span><span
                      class="">liberapay.com/at</span><span
                      class="invisible"></span></a>
                    verified_at: 2019-11-15T10:06:15.557+00:00
                  - name: "Fan of:"
                    value: Punk-rock and post-hardcore (Circa Survive, letlive., La Dispute, THE
                      FEVER 333)Manga (Yu-Gi-Oh!, One Piece, JoJo&apos;s Bizarre
                      Adventure, Death Note, Shaman King)Platformers and RPGs
                      (Banjo-Kazooie, Boktai, Final Fantasy Crystal Chronicles)
                    verified_at: null
                  - name: "Main topics:"
                    value: systemic analysis, design patterns, anticapitalism, info/tech freedom,
                      theory and philosophy, and otherwise being a genuine and
                      decent wholesome poster. i&apos;m just here to hang out
                      and talk to cool people!
                    verified_at: null
        "401":
          description: Your credential verification will fail if the token is invalid or
            incorrect.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                example:
                  error: The access token is invalid
        "403":
          description: Your user account is currently disabled, missing a confirmed email
            address, or pending approval.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                Desabled account:
                  value:
                    error: Your login is currently disabled
                Unconfirmed account:
                  value:
                    error: Your login is missing a confirmed e-mail address
                Pending approval:
                  value:
                    error: Your login is currently pending approval
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                example:
                  error: This method requires an authenticated user
      tags:
        - api
  /api/v1/accounts/update_credentials:
    patch:
      description: Update the user's display and preferences.
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/form-data:
            schema:
              $ref: "#/components/schemas/user_settings"
      responses:
        "200":
          description: You should use accounts/verify_credentials to first obtain
            plaintext representations from within the source parameter, then
            allow the user to edit these plaintext representations before
            submitting them through this API. The server will generate the
            corresponding HTML.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSerializer"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                example:
                  error: The access token is invalid
      tags:
        - api
  /api/v1/accounts/search:
    get:
      responses:
        "200":
          description: "api_v1_accounts_search Controller#Action
            api/v1/accounts/search#show"
      tags:
        - api
        - todo
  /api/v1/accounts/lookup:
    get:
      responses:
        "200":
          description: "api_v1_accounts_lookup Controller#Action
            api/v1/accounts/lookup#show"
      tags:
        - api
  /api/v1/accounts/relationships:
    get:
      responses:
        "200":
          description: "api_v1_accounts_relationships Controller#Action
            api/v1/accounts/relationships#index"
      tags:
        - api
  "/api/v1/accounts/{id}/statuses":
    parameters:
      - in: path
        name: id
        description: The id of the account in the database
        required: true
        schema:
          type: string
    get:
      description: Statuses posted to the given account.
      security:
        - bearerAuth: []
      responses:
        "200":
          description: "api_v1_account_statuses Controller#Action
            api/v1/accounts/statuses#index"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StatusSerializer"
              example:
                - id: "107170686145614323"
                  created_at: 2021-10-27T00:34:53.641Z
                  in_reply_to_id: null
                  in_reply_to_account_id: null
                  sensitive: false
                  spoiler_text: ""
                  visibility: public
                  language: en
                  uri: http://mastodon.local/users/testuser/statuses/107170686145614323
                  url: http://mastodon.local/@testuser/107170686145614323
                  replies_count: 0
                  reblogs_count: 0
                  favourites_count: 0
                  favourited: false
                  reblogged: false
                  muted: false
                  bookmarked: false
                  pinned: false
                  content: "<p>test #2</p>"
                  reblog: null
                  application:
                    name: Web
                    website: null
                  account:
                    id: "107165126327986458"
                    username: testuser
                    acct: testuser
                    display_name: ""
                    locked: false
                    bot: false
                    discoverable: null
                    group: false
                    created_at: 2021-10-26T00:00:00.000Z
                    note: <p></p>
                    url: http://mastodon.local/@testuser
                    avatar: http://mastodon.local/avatars/original/missing.png
                    avatar_static: http://mastodon.local/avatars/original/missing.png
                    header: http://mastodon.local/headers/original/missing.png
                    header_static: http://mastodon.local/headers/original/missing.png
                    followers_count: 0
                    following_count: 0
                    statuses_count: 2
                    last_status_at: 2021-10-27
                    emojis: []
                    fields: []
                  media_attachments: []
                  mentions: []
                  tags: []
                  emojis: []
                  card: null
                  poll: null
                - id: "107170680758911005"
                  created_at: 2021-10-27T00:33:31.552Z
                  in_reply_to_id: null
                  in_reply_to_account_id: null
                  sensitive: false
                  spoiler_text: ""
                  visibility: public
                  language: en
                  uri: http://mastodon.local/users/testuser/statuses/107170680758911005
                  url: http://mastodon.local/@testuser/107170680758911005
                  replies_count: 0
                  reblogs_count: 0
                  favourites_count: 0
                  favourited: false
                  reblogged: false
                  muted: false
                  bookmarked: false
                  pinned: false
                  content: <p>Creating a test status</p>
                  reblog: null
                  application:
                    name: Web
                    website: null
                  account:
                    id: "107165126327986458"
                    username: testuser
                    acct: testuser
                    display_name: ""
                    locked: false
                    bot: false
                    discoverable: null
                    group: false
                    created_at: 2021-10-26T00:00:00.000Z
                    note: <p></p>
                    url: http://mastodon.local/@testuser
                    avatar: http://mastodon.local/avatars/original/missing.png
                    avatar_static: http://mastodon.local/avatars/original/missing.png
                    header: http://mastodon.local/headers/original/missing.png
                    header_static: http://mastodon.local/headers/original/missing.png
                    followers_count: 0
                    following_count: 0
                    statuses_count: 2
                    last_status_at: 2021-10-27
                    emojis: []
                    fields: []
                  media_attachments: []
                  mentions: []
                  tags: []
                  emojis: []
                  card: null
                  poll: null
      tags:
        - api
        - todo
  "/api/v1/accounts/{id}/followers":
    parameters:
      - in: path
        name: id
        description: The id of the account in the database
        required: true
        schema:
          type: string
      - in: query
        name: max_id
        description: Internal parameter. Use HTTP Link header for pagination.
        schema:
          type: string
      - in: query
        name: since_id
        description: Internal parameter. Use HTTP Link header for pagination.
        schema:
          type: string
      - in: query
        name: limit
        description: Maximum number of results to return. Defaults to 40.
        schema:
          type: integer
    get:
      responses:
        "200":
          description: "api_v1_account_followers Controller#Action
            api/v1/accounts/follower_accounts#index"
      tags:
        - api
        - todo
  "/api/v1/accounts/{account_id}/following":
    parameters:
      - in: path
        name: account_id
        required: true
        schema:
          type: integer
    get:
      responses:
        "200":
          description: "api_v1_account_following_index Controller#Action
            api/v1/accounts/following_accounts#index"
      tags:
        - api
        - todo
  "/api/v1/accounts/{account_id}/lists":
    parameters:
      - in: path
        name: account_id
        required: true
        schema:
          type: integer
    get:
      responses:
        "200":
          description: "api_v1_account_lists Controller#Action
            api/v1/accounts/lists#index"
      tags:
        - api
        - todo
  "/api/v1/accounts/{account_id}/identity_proofs":
    parameters:
      - in: path
        name: account_id
        required: true
        schema:
          type: integer
    get:
      responses:
        "200":
          description: "api_v1_account_identity_proofs Controller#Action
            api/v1/accounts/identity_proofs#index"
      tags:
        - api
        - todo
  "/api/v1/accounts/{account_id}/featured_tags":
    parameters:
      - in: path
        name: account_id
        required: true
        schema:
          type: integer
    get:
      responses:
        "200":
          description: "api_v1_account_featured_tags Controller#Action
            api/v1/accounts/featured_tags#index"
      tags:
        - api
        - todo
  "/api/v1/accounts/{id}/follow":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "follow_api_v1_account Controller#Action
            api/v1/accounts#follow"
      tags:
        - api
        - todo
  "/api/v1/accounts/{id}/unfollow":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "unfollow_api_v1_account Controller#Action
            api/v1/accounts#unfollow"
      tags:
        - api
        - todo
  "/api/v1/accounts/{id}/remove_from_followers":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "remove_from_followers_api_v1_account Controller#Action
            api/v1/accounts#remove_from_followers"
      tags:
        - api
        - todo
  "/api/v1/accounts/{id}/block":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "block_api_v1_account Controller#Action
            api/v1/accounts#block"
      tags:
        - api
        - todo
  "/api/v1/accounts/{id}/unblock":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "unblock_api_v1_account Controller#Action
            api/v1/accounts#unblock"
      tags:
        - api
        - todo
  "/api/v1/accounts/{id}/mute":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "mute_api_v1_account Controller#Action api/v1/accounts#mute"
      tags:
        - api
        - todo
  "/api/v1/accounts/{id}/unmute":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "unmute_api_v1_account Controller#Action
            api/v1/accounts#unmute"
      tags:
        - api
        - todo
  "/api/v1/accounts/{account_id}/pin":
    parameters:
      - in: path
        name: account_id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "api_v1_account_pin Controller#Action
            api/v1/accounts/pins#create"
      tags:
        - api
        - todo
  "/api/v1/accounts/{account_id}/unpin":
    parameters:
      - in: path
        name: account_id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "api_v1_account_unpin Controller#Action
            api/v1/accounts/pins#destroy"
      tags:
        - api
        - todo
  "/api/v1/accounts/{account_id}/note":
    parameters:
      - in: path
        name: account_id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "api_v1_account_note Controller#Action
            api/v1/accounts/notes#create"
      tags:
        - api
        - todo
  /api/v1/accounts:
    post:
      description: Creates a user and account records. Returns an account access token
        for the app that initiated the request. The app should save this token
        for later, and should wait for the user to confirm their account by
        clicking a link in their email inbox.
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/form-data:
            schema:
              type: object
              required:
                - username
                - email
                - password
                - agreement
                - locale
              properties:
                username:
                  type: string
                  description: The desired username for the account
                email:
                  type: string
                  description: The email address to be used for login
                password:
                  type: string
                  description: The password to be used for login
                agreement:
                  type: boolean
                  description: Whether the user agrees to the local rules, terms, and policies.
                    These should be presented to the user in order to allow them
                    to consent before setting this parameter to TRUE.
                locale:
                  type: string
                  description: The language of the confirmation email that will be sent
                reason:
                  type: string
                  description: Text that will be reviewed by moderators if registrations require
                    manual approval.
              example:
                username: test_user
                email: test@email.address
                password: Sup3rS3cur3P@ssw0rd
                agreement: true
                locale: en-US
                reason: Test account creation
      responses:
        "200":
          description: "api_v1_accounts Controller#Action api/v1/accounts#create"
        "401":
          description: Authorization failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                example:
                  error: This action is outside the authorized scopes
      tags:
        - api
  "/api/v1/accounts/{id}":
    description: View information about a profile.
    parameters:
      - in: path
        name: id
        description: The id of the account in the database
        required: true
        schema:
          type: string
    get:
      description: View information about a profile.
      responses:
        "200":
          description: Account record will be returned. Note that acct of local users does
            not include the domain name.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSerializer"
              examples:
                local user:
                  value:
                    id: "1"
                    username: Gargron
                    acct: Gargron
                    display_name: Eugen
                    locked: false
                    bot: false
                    created_at: 2016-03-16T14:34:26.392Z
                    note: <p>Developer of Mastodon and administrator of mastodon.social. I post
                      service announcements, development updates, and personal
                      stuff.</p>
                    url: https://mastodon.social/@Gargron
                    avatar: https://files.mastodon.social/accounts/avatars/000/000/001/original/d96d39a0abb45b92.jpg
                    avatar_static: https://files.mastodon.social/accounts/avatars/000/000/001/original/d96d39a0abb45b92.jpg
                    header: https://files.mastodon.social/accounts/headers/000/000/001/original/c91b871f294ea63e.png
                    header_static: https://files.mastodon.social/accounts/headers/000/000/001/original/c91b871f294ea63e.png
                    followers_count: 318699
                    following_count: 453
                    statuses_count: 61013
                    last_status_at: 2019-11-30T20:02:08.277Z
                    emojis: []
                    fields:
                      - name: Patreon
                        value: <a href="https://www.patreon.com/mastodon" rel="me nofollow noopener
                          noreferrer" target="_blank"><span
                          class="invisible">https://www.</span><span
                          class="">patreon.com/mastodon</span><span
                          class="invisible"></span></a>
                        verified_at: null
                      - name: Homepage
                        value: <a href="https://zeonfederated.com" rel="me nofollow noopener noreferrer"
                          target="_blank"><span
                          class="invisible">https://</span><span
                          class="">zeonfederated.com</span><span
                          class="invisible"></span></a>
                        verified_at: 2019-07-15T18:29:57.191+00:00
                remote user:
                  value:
                    id: "23634"
                    username: noiob
                    acct: noiob@awoo.space
                    display_name: shork
                    locked: false
                    bot: false
                    created_at: 2017-02-08T02:00:53.274Z
                    note: <p>:ms_rainbow_flag:​ :ms_bisexual_flag:​ :ms_nonbinary_flag:​ <a
                      href="https://awoo.space/tags/awoo" class="mention
                      hashtag" rel="nofollow noopener noreferrer"
                      target="_blank">#<span>awoo</span></a>.space <a
                      href="https://awoo.space/tags/admin" class="mention
                      hashtag" rel="nofollow noopener noreferrer"
                      target="_blank">#<span>admin</span></a> ~ <a
                      href="https://awoo.space/tags/bi" class="mention hashtag"
                      rel="nofollow noopener noreferrer"
                      target="_blank">#<span>bi</span></a> ~ <a
                      href="https://awoo.space/tags/nonbinary" class="mention
                      hashtag" rel="nofollow noopener noreferrer"
                      target="_blank">#<span>nonbinary</span></a> ~ compsci
                      student ~ likes video <a
                      href="https://awoo.space/tags/games" class="mention
                      hashtag" rel="nofollow noopener noreferrer"
                      target="_blank">#<span>games</span></a> and weird/ old
                      electronics and will post obsessively about both ~ avatar
                      by <span class="h-card"><a
                      href="https://weirder.earth/@dzuk" class="u-url mention"
                      rel="nofollow noopener noreferrer"
                      target="_blank">@<span>dzuk</span></a></span></p>
                    url: https://awoo.space/@noiob
                    avatar: https://files.mastodon.social/accounts/avatars/000/023/634/original/6ca8804dc46800ad.png
                    avatar_static: https://files.mastodon.social/accounts/avatars/000/023/634/original/6ca8804dc46800ad.png
                    header: https://files.mastodon.social/accounts/headers/000/023/634/original/256eb8d7ac40f49a.png
                    header_static: https://files.mastodon.social/accounts/headers/000/023/634/original/256eb8d7ac40f49a.png
                    followers_count: 553
                    following_count: 405
                    statuses_count: 28982
                    last_status_at: 2019-12-01T00:39:57.264Z
                    emojis:
                      - shortcode: ms_rainbow_flag
                        url: https://files.mastodon.social/custom_emojis/images/000/028/691/original/6de008d6281f4f59.png
                        static_url: https://files.mastodon.social/custom_emojis/images/000/028/691/static/6de008d6281f4f59.png
                        visible_in_picker: true
                      - shortcode: ms_bisexual_flag
                        url: https://files.mastodon.social/custom_emojis/images/000/050/744/original/02f94a5fca7eaf78.png
                        static_url: https://files.mastodon.social/custom_emojis/images/000/050/744/static/02f94a5fca7eaf78.png
                        visible_in_picker: true
                      - shortcode: ms_nonbinary_flag
                        url: https://files.mastodon.social/custom_emojis/images/000/105/099/original/8106088bd4782072.png
                        static_url: https://files.mastodon.social/custom_emojis/images/000/105/099/static/8106088bd4782072.png
                        visible_in_picker: true
                    fields:
                      - name: Pronouns
                        value: they/them
                        verified_at: null
                      - name: Alt
                        value: <span class="h-card"><a href="https://cybre.space/@noiob" class="u-url
                          mention" rel="nofollow noopener noreferrer"
                          target="_blank">@<span>noiob</span></a></span>
                        verified_at: null
                      - name: Bots
                        value: <span class="h-card"><a href="https://botsin.space/@darksouls"
                          class="u-url mention" rel="nofollow noopener
                          noreferrer"
                          target="_blank">@<span>darksouls</span></a></span>,
                          <span class="h-card"><a
                          href="https://botsin.space/@nierautomata" class="u-url
                          mention" rel="nofollow noopener noreferrer"
                          target="_blank">@<span>nierautomata</span></a></span>,
                          code for <span class="h-card"><a
                          href="https://botsin.space/@awoobot" class="u-url
                          mention" rel="nofollow noopener noreferrer"
                          target="_blank">@<span>awoobot</span></a></span>
                        verified_at: null
                      - name: Website
                        value: <a href="http://shork.xyz" rel="nofollow noopener noreferrer"
                          target="_blank"><span
                          class="invisible">http://</span><span
                          class="">shork.xyz</span><span
                          class="invisible"></span></a>
                        verified_at: 2019-11-23T20:25:47.907+00:00
                suspended user:
                  value:
                    id: "14"
                    username: stigatle
                    acct: stigatle@quitter.no
                    display_name: ""
                    locked: false
                    bot: false
                    discoverable: false
                    group: false
                    created_at: 2016-03-18T10:04:51.700Z
                    note: ""
                    url: https://quitter.no/stigatle
                    avatar: https://mastodon.social/avatars/original/missing.png
                    avatar_static: https://mastodon.social/avatars/original/missing.png
                    header: https://mastodon.social/headers/original/missing.png
                    header_static: https://mastodon.social/headers/original/missing.png
                    followers_count: 0
                    following_count: 0
                    statuses_count: 0
                    last_status_at: null
                    suspended: true
                    emojis: []
                    fields: []
        "401":
          description: If the instance is in whitelist mode and the Authorization header
            is missing or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                example:
                  error: This API requires an authenticated user
        "404":
          description: Account does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                example:
                  error: Record not found
        "410":
          description: Account is suspended
      tags:
        - api
  "/api/v1/lists/{list_id}/accounts":
    parameters:
      - in: path
        name: list_id
        required: true
        schema:
          type: integer
    get:
      responses:
        "200":
          description: "api_v1_list_accounts Controller#Action
            api/v1/lists/accounts#show"
      tags:
        - api
        - todo
    delete:
      responses:
        "200":
          description: "Controller#Action api/v1/lists/accounts#destroy"
      tags:
        - api
        - todo
    post:
      responses:
        "200":
          description: "Controller#Action api/v1/lists/accounts#create"
      tags:
        - api
        - todo
  /api/v1/lists:
    get:
      responses:
        "200":
          description: "api_v1_lists Controller#Action api/v1/lists#index"
      tags:
        - api
        - todo
    post:
      responses:
        "200":
          description: "Controller#Action api/v1/lists#create"
      tags:
        - api
        - todo
  "/api/v1/lists/{id}":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      responses:
        "200":
          description: "api_v1_list Controller#Action api/v1/lists#show"
      tags:
        - api
        - todo
    patch:
      responses:
        "200":
          description: "Controller#Action api/v1/lists#update"
      tags:
        - api
        - todo
    put:
      responses:
        "200":
          description: "Controller#Action api/v1/lists#update"
      tags:
        - api
        - todo
    delete:
      responses:
        "200":
          description: "Controller#Action api/v1/lists#destroy"
      tags:
        - api
        - todo
  /api/v1/featured_tags/suggestions:
    get:
      responses:
        "200":
          description: "api_v1_featured_tags_suggestions Controller#Action
            api/v1/featured_tags/suggestions#index"
      tags:
        - api
        - todo
  /api/v1/featured_tags:
    get:
      responses:
        "200":
          description: "api_v1_featured_tags Controller#Action
            api/v1/featured_tags#index"
      tags:
        - api
        - todo
    post:
      responses:
        "200":
          description: "Controller#Action api/v1/featured_tags#create"
      tags:
        - api
        - todo
  "/api/v1/featured_tags/{id}":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    delete:
      responses:
        "200":
          description: "api_v1_featured_tag Controller#Action
            api/v1/featured_tags#destroy"
      tags:
        - api
        - todo
  "/api/v1/polls/{poll_id}/votes":
    parameters:
      - in: path
        name: poll_id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "api_v1_poll_votes Controller#Action
            api/v1/polls/votes#create"
      tags:
        - todo
        - api
  /api/v1/polls:
    post:
      responses:
        "200":
          description: "api_v1_polls Controller#Action api/v1/polls#create"
      tags:
        - api
        - todo
  "/api/v1/polls/{id}":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      responses:
        "200":
          description: "api_v1_poll Controller#Action api/v1/polls#show"
      tags:
        - api
        - todo
  /api/v1/push/subscription:
    get:
      responses:
        "200":
          description: "api_v1_push_subscription Controller#Action
            api/v1/push/subscriptions#show"
      tags:
        - api
        - todo
    patch:
      responses:
        "200":
          description: "Controller#Action api/v1/push/subscriptions#update"
      tags:
        - api
        - todo
    put:
      responses:
        "200":
          description: "Controller#Action api/v1/push/subscriptions#update"
      tags:
        - api
        - todo
    delete:
      responses:
        "200":
          description: "Controller#Action api/v1/push/subscriptions#destroy"
      tags:
        - api
        - todo
    post:
      responses:
        "200":
          description: "Controller#Action api/v1/push/subscriptions#create"
      tags:
        - api
        - todo
  "/api/v1/admin/accounts/{id}/enable":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "enable_api_v1_admin_account Controller#Action
            api/v1/admin/accounts#enable"
      tags:
        - api
        - todo
  "/api/v1/admin/accounts/{id}/unsensitive":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "unsensitive_api_v1_admin_account Controller#Action
            api/v1/admin/accounts#unsensitive"
      tags:
        - api
        - todo
  "/api/v1/admin/accounts/{id}/unsilence":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "unsilence_api_v1_admin_account Controller#Action
            api/v1/admin/accounts#unsilence"
      tags:
        - api
        - todo
  "/api/v1/admin/accounts/{id}/unsuspend":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "unsuspend_api_v1_admin_account Controller#Action
            api/v1/admin/accounts#unsuspend"
      tags:
        - api
        - todo
  "/api/v1/admin/accounts/{id}/approve":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "approve_api_v1_admin_account Controller#Action
            api/v1/admin/accounts#approve"
      tags:
        - api
        - todo
  "/api/v1/admin/accounts/{id}/reject":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "reject_api_v1_admin_account Controller#Action
            api/v1/admin/accounts#reject"
      tags:
        - api
        - todo
  "/api/v1/admin/accounts/{account_id}/action":
    parameters:
      - in: path
        name: account_id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "api_v1_admin_account_action Controller#Action
            api/v1/admin/account_actions#create"
      tags:
        - api
        - todo
  /api/v1/admin/accounts:
    get:
      responses:
        "200":
          description: "api_v1_admin_accounts Controller#Action
            api/v1/admin/accounts#index"
      tags:
        - api
        - todo
  "/api/v1/admin/accounts/{id}":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      responses:
        "200":
          description: "api_v1_admin_account Controller#Action
            api/v1/admin/accounts#show"
      tags:
        - api
        - todo
    delete:
      responses:
        "200":
          description: "Controller#Action api/v1/admin/accounts#destroy"
      tags:
        - api
        - todo
  "/api/v1/admin/reports/{id}/assign_to_self":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "assign_to_self_api_v1_admin_report Controller#Action
            api/v1/admin/reports#assign_to_self"
      tags:
        - api
        - todo
  "/api/v1/admin/reports/{id}/unassign":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "unassign_api_v1_admin_report Controller#Action
            api/v1/admin/reports#unassign"
      tags:
        - api
        - todo
  "/api/v1/admin/reports/{id}/reopen":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "reopen_api_v1_admin_report Controller#Action
            api/v1/admin/reports#reopen"
      tags:
        - api
        - todo
  "/api/v1/admin/reports/{id}/resolve":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: "resolve_api_v1_admin_report Controller#Action
            api/v1/admin/reports#resolve"
      tags:
        - api
        - todo
  /api/v1/admin/reports:
    get:
      responses:
        "200":
          description: "api_v1_admin_reports Controller#Action
            api/v1/admin/reports#index"
      tags:
        - api
        - todo
  "/api/v1/admin/reports/{id}":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      responses:
        "200":
          description: "api_v1_admin_report Controller#Action
            api/v1/admin/reports#show"
      tags:
        - api
        - todo
  /api/v1/admin/trends:
    get:
      responses:
        "200":
          description: "api_v1_admin_trends Controller#Action
            api/v1/admin/trends#index"
      tags:
        - api
        - todo
  /api/v1/admin/measures:
    post:
      responses:
        "200":
          description: "api_v1_admin_measures Controller#Action
            api/v1/admin/measures#create"
      tags:
        - api
        - todo
  /api/v1/admin/dimensions:
    post:
      responses:
        "200":
          description: "api_v1_admin_dimensions Controller#Action
            api/v1/admin/dimensions#create"
      tags:
        - api
        - todo
  /api/v1/admin/retention:
    post:
      responses:
        "200":
          description: "api_v1_admin_retention Controller#Action
            api/v1/admin/retention#create"
      tags:
        - api
        - todo
  /api/v2/media:
    post:
      responses:
        "200":
          description: "api_v2_media Controller#Action api/v2/media#create"
      tags:
        - api
        - todo
  /api/v2/search:
    get:
      responses:
        "200":
          description: "api_v2_search Controller#Action api/v2/search#index"
      tags:
        - api
        - todo
  /api/v2/suggestions:
    get:
      responses:
        "200":
          description: "api_v2_suggestions Controller#Action
            api/v2/suggestions#index"
      tags:
        - api
        - todo
  /api/web/settings:
    patch:
      responses:
        "200":
          description: "api_web_settings Controller#Action api/web/settings#update"
      tags:
        - api
        - todo
    put:
      responses:
        "200":
          description: "Controller#Action api/web/settings#update"
      tags:
        - api
        - todo
  /api/web/embed:
    post:
      responses:
        "200":
          description: "api_web_embed Controller#Action api/web/embeds#create"
      tags:
        - api
        - todo
  "/api/web/push_subscriptions/{id}":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    put:
      responses:
        "200":
          description: "api_web_push_subscription Controller#Action
            api/web/push_subscriptions#update"
      tags:
        - api
        - todo
  /api/web/push_subscriptions:
    post:
      responses:
        "200":
          description: "api_web_push_subscriptions Controller#Action
            api/web/push_subscriptions#create"
      tags:
        - api
        - todo
  /web(/*any):
    get:
      responses:
        "200":
          description: "web Controller#Action home#index"
      tags:
        - todo
  /about:
    get:
      responses:
        "200":
          description: "about Controller#Action about#show"
      tags:
        - todo
  /about/more:
    get:
      responses:
        "200":
          description: "about_more Controller#Action about#more"
  /terms:
    get:
      responses:
        "200":
          description: "terms Controller#Action about#terms"
      tags:
        - todo
components:
  schemas:
    Link:
      type: object
      properties:
        rel:
          description: A string representing the link's relation type
          type: string
        type:
          description: Content type
          type: string
        href:
          description: A string representing the link's target URI
          type: string
      example:
        rel: http://webfinger.net/rel/profile-page
        type: text/html
        href: https://hostux.social/@someuser
    WellKnownNodeInfo:
      type: object
      properties:
        links:
          type: array
          items:
            $ref: "#/components/schemas/Link"
      example:
        links:
          - rel: http://nodeinfo.diaspora.software/ns/schema/2.0
            href: https://hostux.social/nodeinfo/2.0
    WebFinger:
      type: object
      description: Mastodon's implementation of the RFC 7033(WebFinger)
        https://datatracker.ietf.org/doc/html/rfc7033#section-4
      required:
        - subject
        - aliases
        - properties
        - links
      properties:
        subject:
          type: string
          description: A URI that identifies the entity that the JRD describes.
          pattern: ^acct:[0-9a-zA-Z._-]+@[0-9a-zA-Z._-]+$
        aliases:
          type: array
          description: An array of zero or more URI strings that identify the same entity
            as the \"subject\" URI.
          items:
            type: string
        links:
          type: array
          description: any number of member objects, each of which represents a link.
          items:
            $ref: "#/components/schemas/Link"
      example:
        subject: acct:someuser@hostux.social
        aliases:
          - https://hostux.social/@someuser
          - https://hostux.social/users/someuser
        links:
          - rel: http://webfinger.net/rel/profile-page
            type: text/html
            href: https://hostux.social/@someuser
          - rel: self
            type: application/activity+json
            href: https://hostux.social/users/someuser
          - rel: http://ostatus.org/schema/1.0/subscribe
            template: https://hostux.social/authorize_interaction?uri={uri}
    KeybaseProofConfig:
      type: object
      properties:
        version:
          type: integer
        domain:
          type: string
        display_name:
          type: string
        username:
          type: object
          properties:
            min:
              type: integer
              enum:
                - 1
            max:
              type: integer
              enum:
                - 30
            re:
              type: string
              enum:
                - "[a-z0-9_]+([a-z0-9_.-]+[a-z0-9_]+)?"
        brand_color:
          type: string
          enum:
            - "#282c37"
        logo:
          type: object
          properties:
            svg_black:
              type: string
            svg_white:
              type: string
            svg_full:
              type: string
            svg_full_darkmode:
              type: string
        description:
          description: Site short description from settings or about mastodon html from
            about
          type: string
        prefill_url:
          type: string
        profile_url:
          type: string
        check_url:
          type: string
        check_path:
          type: array
          items:
            enum:
              - signatures
        avatar_path:
          type: array
          items:
            enum:
              - avatar
        contact:
          description: Site contact email or \"unknown\"
          type: string
          format: email
      example:
        version: 1
        domain: hostux.social
        display_name: Hostux.social
        username:
          min: 1
          max: 30
          re: "[a-z0-9_]+([a-z0-9_.-]+[a-z0-9_]+)?"
        brand_color: "#282c37"
        logo:
          svg_black: https://hostux.social/packs/media/images/logo_transparent_black-06693e3c4efed59096243b4c3912977b.svg
          svg_white: https://hostux.social/packs/media/images/logo_transparent_white-2c6cf5e48945c4b38dcf8987f7919c20.svg
          svg_full: https://hostux.social/packs/media/images/logo-33a0fb4c065a0ccb90b51fcfdea6b3cf.svg
          svg_full_darkmode: https://hostux.social/packs/media/images/logo-33a0fb4c065a0ccb90b51fcfdea6b3cf.svg
        description: "This service is offered by alarig.\r

          Beer, privacy and free software lovers. Join us!"
        prefill_url: https://hostux.social/settings/identity_proofs/new?provider=keybase&provider_username=%{kb_username}&token=%{sig_hash}&user_agent=%{kb_ua}&username=%{username}
        profile_url: https://hostux.social/@%{username}
        check_url: https://hostux.social/api/proofs?provider=keybase&username=%{username}
        check_path:
          - signatures
        avatar_path:
          - avatar
        contact:
          - contact@hostux.social
    NodeInfo:
      description: NodeInfo schema version 2.0
        (http://nodeinfo.diaspora.software/ns/schema/2.0) as implemented by
        Mastodon.
      type: object
      additionalProperties: false
      required:
        - version
        - software
        - protocols
        - usage
      properties:
        version:
          description: The schema version, must be 2.0.
          enum:
            - "2.0"
        software:
          description: Metadata about server software in use.
          type: object
          additionalProperties: false
          required:
            - name
            - version
          properties:
            name:
              description: The canonical name of this server software.
              type: string
              pattern: ^[a-z0-9-]+$
            version:
              description: The version of this server software.
              type: string
        protocols:
          description: The protocols supported on this server.
          type: array
          minItems: 1
          items:
            enum:
              - activitypub
              - buddycloud
              - dfrn
              - diaspora
              - libertree
              - ostatus
              - pumpio
              - tent
              - xmpp
              - zot
        openRegistrations:
          description: Whether this server allows open self-registration.
          type: boolean
        usage:
          description: Usage statistics for this server.
          type: object
          additionalProperties: false
          required:
            - users
          properties:
            users:
              description: statistics about the users of this server.
              type: object
              additionalProperties: false
              properties:
                total:
                  description: The total amount of on this server registered users.
                  type: integer
                  minimum: 0
                activeHalfyear:
                  description: The amount of users that signed in at least once in the last 180
                    days.
                  type: integer
                  minimum: 0
                activeMonth:
                  description: The amount of users that signed in at least once in the last 30
                    days.
                  type: integer
                  minimum: 0
            localPosts:
              description: The amount of posts that were made by users that are registered on
                this server.
              type: integer
              minimum: 0
        metadata:
          description: Free form key value pairs for software specific values. Clients
            should not rely on any specific key present.
          type: object
          minProperties: 0
          additionalProperties: true
      example:
        version: "2.0"
        software:
          name: mastodon
          version: 3.4.0
        protocols: activitypub
        usage:
          users:
            total: 5129
            activeMonth: 236
            activeHalfyear: 567
          localPosts: 370341
        openRegistrations: true
    Manifest:
      type: object
      properties:
        name:
          type: string
        short_name:
          type: string
        description:
          type: string
        icons:
          type: array
          items:
            $ref: "#/components/schemas/Icon"
        theme_color:
          type: string
        background_color:
          type: string
        display:
          type: string
        start_url:
          type: string
        scope:
          type: string
        share_target:
          type: object
          properties:
            url_template:
              type: string
            action:
              type: string
            method:
              type: string
            enctype:
              type: string
            params:
              type: object
              properties:
                title:
                  type: string
                text:
                  type: string
                url:
                  type: string
        shortcuts:
          type: array
          items:
            $ref: "#/components/schemas/Shortcut"
      example:
        name: Hostux.social
        short_name: Hostux.social
        description: "This service is offered by alarig.\r

          Beer, privacy and free software lovers. Join us!"
        icons:
          - src: /android-chrome-192x192.png
            sizes: 192x192
            type: image/png
        theme_color: "#282c37"
        background_color: "#191b22"
        display: standalone
        start_url: /web/timelines/home
        scope: https://hostux.social/
        share_target:
          url_template: share?title={title}&text={text}&url={url}
          action: share
          method: GET
          enctype: application/x-www-form-urlencoded
          params:
            title: title
            text: text
            url: url
        shortcuts:
          - name: New toot
            url: /web/statuses/new
            icons:
              - src: /shortcuts/new-status.png
                type: image/png
                sizes: 192x192
          - name: Notifications
            url: /web/notifications
            icons:
              - src: /shortcuts/notifications.png
                type: image/png
                sizes: 192x192
          - name: Direct messages
            url: /web/timelines/direct
            icons:
              - src: /shortcuts/direct.png
                type: image/png
                sizes: 192x192
    Icon:
      type: object
      properties:
        src:
          type: string
        sizes:
          type: string
        type:
          type: string
      example:
        src: /android-chrome-192x192.png
        sizes: 192x192
        type: image/png
    Shortcut:
      type: object
      properties:
        name:
          type: string
        url:
          type: string
        icons:
          $ref: "#/components/schemas/Icon"
      example:
        name: New toot
        url: /web/statuses/new
        icons:
          - src: /shortcuts/new-status.png
            type: image/png
            sizes: 192x192
    AccountSerializer:
      type: object
      properties:
        id:
          type: string
          format: integer
        username:
          type: string
        acct:
          type: string
        display_name:
          type: string
        locked:
          type: boolean
        bot:
          type: boolean
        discoverable:
          type: boolean
        group:
          type: boolean
        created_at:
          type: string
          format: timestamp
        note:
          type: string
        url:
          type: string
          format: uri
        avatar:
          type: string
          format: uri
        avatar_static:
          type: string
          format: uri
        header:
          type: string
          format: uri
        header_static:
          type: string
          format: uri
        followers_count:
          type: integer
        following_count:
          type: integer
        statuses_count:
          type: integer
        last_status_at:
          type: string
          format: timestamp
        moved:
          $ref: "#/components/schemas/AccountSerializer"
        source:
          type: object
          properties:
            privacy:
              type: string
            sensitive:
              type: boolean
            language:
              type: string
            note:
              type: string
            fields:
              type: array
              items:
                $ref: "#/components/schemas/account_field"
            follow_requests_count:
              type: integer
        emojis:
          type: array
          items:
            $ref: "#/components/schemas/CustomEmojiSerializer"
      description: REST::CredentialAccountSerializer
      example:
        id: "14715"
        username: trwnh
        acct: trwnh
        display_name: infinite love ⴳ
        locked: false
        bot: false
        created_at: 2016-11-24T10:02:12.085Z
        note: '<p>i have approximate knowledge of many things. perpetual student.
          (nb/ace/they)</p><p>xmpp/email: a@trwnh.com<br /><a
          href="https://trwnh.com" rel="nofollow noopener noreferrer"
          target="_blank"><span class="invisible">https://</span><span
          class="">trwnh.com</span><span class="invisible"></span></a><br />help
          me live: <a href="https://liberapay.com/at" rel="nofollow noopener
          noreferrer" target="_blank"><span
          class="invisible">https://</span><span
          class="">liberapay.com/at</span><span class="invisible"></span></a> or
          <a href="https://paypal.me/trwnh" rel="nofollow noopener noreferrer"
          target="_blank"><span class="invisible">https://</span><span
          class="">paypal.me/trwnh</span><span
          class="invisible"></span></a></p><p>- my triggers are moths and
          glitter<br />- i have all notifs except mentions turned off, so please
          interact if you wanna be friends! i literally will not notice
          otherwise<br />- dm me if i did something wrong, so i can improve<br
          />- purest person on fedi, do not lewd in my presence<br />- #1 ami
          cole fan account</p><p>:fatyoshi:</p>'
        url: https://mastodon.social/@trwnh
        avatar: https://files.mastodon.social/accounts/avatars/000/014/715/original/34aa222f4ae2e0a9.png
        avatar_static: https://files.mastodon.social/accounts/avatars/000/014/715/original/34aa222f4ae2e0a9.png
        header: https://files.mastodon.social/accounts/headers/000/014/715/original/5c6fc24edb3bb873.jpg
        header_static: https://files.mastodon.social/accounts/headers/000/014/715/original/5c6fc24edb3bb873.jpg
        followers_count: 821
        following_count: 178
        statuses_count: 33120
        last_status_at: 2019-11-24T15:49:42.251Z
        source:
          privacy: public
          sensitive: false
          language: ""
          note: "i have approximate knowledge of many things. perpetual student.
            (nb/ace/they)\r

            \r

            xmpp/email: a@trwnh.com\r

            https://trwnh.com\r

            help me live: https://liberapay.com/at or
            https://paypal.me/trwnh\r

            \r

            - my triggers are moths and glitter\r

            - i have all notifs except mentions turned off, so
            please interact if you wanna be friends! i literally will not notice
            otherwise\r

            - dm me if i did something wrong, so i can improve\r

            - purest person on fedi, do not lewd in my presence\r

            - #1 ami cole fan account\r

            \r

            :fatyoshi:"
          fields:
            - name: Website
              value: https://trwnh.com
              verified_at: 2019-08-29T04:14:55.571+00:00
            - name: Sponsor
              value: https://liberapay.com/at
              verified_at: 2019-11-15T10:06:15.557+00:00
            - name: "Fan of:"
              value: Punk-rock and post-hardcore (Circa Survive, letlive., La Dispute, THE
                FEVER 333)Manga (Yu-Gi-Oh!, One Piece, JoJo's Bizarre Adventure,
                Death Note, Shaman King)Platformers and RPGs (Banjo-Kazooie,
                Boktai, Final Fantasy Crystal Chronicles)
              verified_at: null
            - name: "Main topics:"
              value: systemic analysis, design patterns, anticapitalism, info/tech freedom,
                theory and philosophy, and otherwise being a genuine and decent
                wholesome poster. i'm just here to hang out and talk to cool
                people!
              verified_at: null
          follow_requests_count: 0
        emojis:
          - shortcode: fatyoshi
            url: https://files.mastodon.social/custom_emojis/images/000/023/920/original/e57ecb623faa0dc9.png
            static_url: https://files.mastodon.social/custom_emojis/images/000/023/920/static/e57ecb623faa0dc9.png
            visible_in_picker: true
        fields:
          - name: Website
            value: <a href="https://trwnh.com" rel="me nofollow noopener noreferrer"
              target="_blank"><span class="invisible">https://</span><span
              class="">trwnh.com</span><span class="invisible"></span></a>
            verified_at: 2019-08-29T04:14:55.571+00:00
          - name: Sponsor
            value: <a href="https://liberapay.com/at" rel="me nofollow noopener noreferrer"
              target="_blank"><span class="invisible">https://</span><span
              class="">liberapay.com/at</span><span
              class="invisible"></span></a>
            verified_at: 2019-11-15T10:06:15.557+00:00
          - name: "Fan of:"
            value: Punk-rock and post-hardcore (Circa Survive, letlive., La Dispute, THE
              FEVER 333)Manga (Yu-Gi-Oh!, One Piece, JoJo&apos;s Bizarre
              Adventure, Death Note, Shaman King)Platformers and RPGs
              (Banjo-Kazooie, Boktai, Final Fantasy Crystal Chronicles)
            verified_at: null
          - name: "Main topics:"
            value: systemic analysis, design patterns, anticapitalism, info/tech freedom,
              theory and philosophy, and otherwise being a genuine and decent
              wholesome poster. i&apos;m just here to hang out and talk to cool
              people!
            verified_at: null
    StatusSerializer:
      type: object
      properties:
        id:
          type: string
        created_at:
          type: string
        in_reply_to_id:
          type: string
        in_reply_to_account_id:
          type: string
        sensitive:
          type: boolean
        spoiler_text:
          type: string
        visibility:
          type: string
        language:
          type: string
        uri:
          type: string
        url:
          type: string
        replies_count:
          type: integer
        reblogs_count:
          type: integer
        favourites_count:
          type: integer
        favourited:
          type: boolean
        reblogged:
          type: boolean
        muted:
          type: boolean
        bookmarked:
          type: boolean
        pinned:
          type: boolean
        content:
          type: string
        text:
          type: string
        reblog:
          $ref: "#/components/schemas/StatusSerializer"
        application:
          type: object
          properties:
            name:
              type: string
            website:
              type: string
        account:
          $ref: "#/components/schemas/AccountSerializer"
        media_attachments:
          $ref: "#/components/schemas/MediaAttachmentSerializer"
        mentions:
          type: array
          items:
            $ref: "#/components/schemas/MentionSerializer"
        emojis:
          type: array
          items:
            $ref: "#/components/schemas/CustomEmojiSerializer"
        card:
          $ref: "#/components/schemas/PreviewCardSerializer"
        poll:
          $ref: "#/components/schemas/PollSerializer"
    MediaAttachmentSerializer:
      type: object
    MentionSerializer:
      type: object
    PreviewCardSerializer:
      type: object
    PollSerializer:
      type: object
    account_field:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        verified_at:
          type: string
          format: timestamp
    CustomEmojiSerializer:
      type: object
      properties:
        shortcode:
          type: string
        url:
          type: string
          format: uri
        static_url:
          type: string
          format: uri
        visible_in_picker:
          type: boolean
        category:
          type: string
    user_settings:
      type: object
      properties:
        discoverable:
          type: string
          description: Whether the account should be shown in the profile directory.
        bot:
          type: boolean
          description: Whether the account has a bot flag.
        display_name:
          type: string
          description: The display name to use for the profile.
        note:
          type: string
          description: The account bio.
        avatar:
          type: string
          description: Avatar image encoded using multipart/form-data
        header:
          type: string
          description: Header image encoded using multipart/form-data
        locked:
          type: boolean
          description: Whether manual approval of follow requests is required.
        "source[privacy]":
          type: string
          description: Default post privacy for authored statuses.
